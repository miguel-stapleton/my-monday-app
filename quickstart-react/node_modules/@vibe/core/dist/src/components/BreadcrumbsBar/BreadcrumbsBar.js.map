{"version":3,"file":"BreadcrumbsBar.js","sources":["../../../../src/components/BreadcrumbsBar/BreadcrumbsBar.tsx"],"sourcesContent":["import React, { ReactElement } from \"react\";\nimport cx from \"classnames\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport { NavigationChevronRight } from \"@vibe/icons\";\nimport { BreadcrumbsBarType as BreadcrumbsBarTypeEnum } from \"./BreadcrumbsConstants\";\nimport { BreadcrumbsBarType } from \"./Breadcrumbs.types\";\nimport { BreadcrumbItemProps } from \"./BreadcrumbItem/BreadcrumbItem\";\nimport { withStaticProps, VibeComponentProps } from \"../../types\";\nimport styles from \"./BreadcrumbsBar.module.scss\";\nimport { BreadcrumbMenuProps } from \"./BreadcrumbMenu/BreadcrumbMenu\";\n\nexport interface BreadcrumbBarProps extends VibeComponentProps {\n  /**\n   * The type of the breadcrumb bar, determining if it is navigational or for indication only.\n   */\n  type: BreadcrumbsBarType;\n  /**\n   * The breadcrumb items displayed in the bar.\n   */\n  children:\n    | ReactElement<BreadcrumbItemProps | BreadcrumbMenuProps>\n    | ReactElement<BreadcrumbItemProps | BreadcrumbMenuProps>[];\n}\n\nconst BreadcrumbsBar = ({\n  className,\n  children,\n  type = \"indication\",\n  id,\n  \"data-testid\": dataTestId\n}: BreadcrumbBarProps) => (\n  <nav\n    aria-label=\"Breadcrumb\"\n    className={cx(styles.breadcrumbsBar, className)}\n    id={id}\n    data-testid={dataTestId || getTestId(ComponentDefaultTestId.BREADCRUMBS_BAR, id)}\n  >\n    <ol>\n      {children &&\n        React.Children.map(children, (child, index) =>\n          React.isValidElement(child)\n            ? [\n                index > 0 && <NavigationChevronRight className={styles.separatorIcon} size=\"14\" aria-hidden=\"true\" />,\n                React.cloneElement(child, {\n                  ...child?.props,\n                  isClickable: type !== \"indication\"\n                })\n              ]\n            : null\n        )}\n    </ol>\n  </nav>\n);\n\ninterface BreadcrumbsBarStaticProps {\n  types: typeof BreadcrumbsBarTypeEnum;\n}\n\nexport default withStaticProps<BreadcrumbBarProps, BreadcrumbsBarStaticProps>(BreadcrumbsBar, {\n  types: BreadcrumbsBarTypeEnum\n});\n"],"names":["withStaticProps","_ref","children","_ref$type","type","id","dataTestId","React","createElement","className","cx","styles","breadcrumbsBar","getTestId","ComponentDefaultTestId","BREADCRUMBS_BAR","Children","map","child","index","isValidElement","NavigationChevronRight","separatorIcon","size","cloneElement","Object","assign","props","isClickable","types","BreadcrumbsBarTypeEnum"],"mappings":"uZAwBA,IAkCeA,EAAAA,GAlCQ,SAAHC,GAAA,IAElBC,EAAQD,EAARC,SAAQC,EAAAF,EACRG,KAAAA,OAAO,IAAHD,EAAG,aAAYA,EACnBE,EAAEJ,EAAFI,GACeC,EAAUL,EAAzB,eAAa,OAEbM,EACaC,cAAA,MAAA,CAAA,aAAA,aACXC,UAAWC,EAAGC,EAAOC,eARdX,EAATQ,WASEJ,GAAIA,EAAE,cACOC,GAAcO,EAAUC,EAAuBC,gBAAiBV,IAE7EE,EAAAC,cAAA,KAAA,KACGN,GACCK,EAAMS,SAASC,IAAIf,GAAU,SAACgB,EAAOC,GAAK,OACxCZ,EAAMa,eAAeF,GACjB,CACEC,EAAQ,GAAKZ,EAACC,cAAAa,GAAuBZ,UAAWE,EAAOW,cAAeC,KAAK,KAAI,cAAa,SAC5FhB,EAAMiB,aAAaN,EACdO,OAAAC,OAAAD,OAAAC,OAAA,CAAA,EAAAR,aAAK,EAALA,EAAOS,OACV,CAAAC,YAAsB,eAATxB,MAGjB,IAAI,KAGV,GAOsF,CAC5FyB,MAAOC"}