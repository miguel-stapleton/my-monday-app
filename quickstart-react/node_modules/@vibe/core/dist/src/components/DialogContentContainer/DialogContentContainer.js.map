{"version":3,"file":"DialogContentContainer.js","sources":["../../../../src/components/DialogContentContainer/DialogContentContainer.tsx"],"sourcesContent":["import { camelCase } from \"lodash-es\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport cx from \"classnames\";\nimport React, { useRef, forwardRef } from \"react\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport { DialogSize as DialogSizeEnum, DialogType as DialogTypeEnum } from \"../Dialog/DialogConstants\";\nimport { DialogSize, DialogType } from \"../Dialog\";\nimport { withStaticProps, VibeComponentProps } from \"../../types\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport styles from \"./DialogContentContainer.module.scss\";\n\nexport interface DialogContentContainerProps extends VibeComponentProps {\n  /**\n   * The content inside the dialog container.\n   */\n  children?: React.ReactNode;\n  /**\n   * The ID of the element that labels this dialog.\n   */\n  ariaLabelledby?: string;\n  /**\n   * The ID of the element that describes this dialog.\n   */\n  ariaDescribedby?: string;\n  /**\n   * The type of dialog.\n   */\n  type?: DialogType;\n  /**\n   * The size of the dialog.\n   */\n  size?: DialogSize;\n  /**\n   * Custom styles applied to the dialog container.\n   */\n  style?: React.CSSProperties;\n}\n\nconst DialogContentContainer = forwardRef(\n  (\n    {\n      id,\n      className = \"\",\n      ariaLabelledby = \"\",\n      ariaDescribedby = \"\",\n      type = \"popover\",\n      size = \"small\",\n      children,\n      style,\n      \"data-testid\": dataTestId = getTestId(ComponentDefaultTestId.DIALOG_CONTENT_CONTAINER, id),\n      ...props\n    }: DialogContentContainerProps,\n    ref: React.Ref<HTMLElement>\n  ) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n\n    return (\n      <div\n        role=\"dialog\"\n        data-testid={dataTestId}\n        aria-labelledby={ariaLabelledby}\n        aria-describedby={ariaDescribedby}\n        ref={mergedRef}\n        style={style}\n        className={cx(\n          styles.dialogContentContainer,\n          className,\n          getStyle(styles, camelCase(\"type--\" + type)),\n          getStyle(styles, camelCase(\"size--\" + size))\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n\ninterface DialogContentContainerStaticProps {\n  types: typeof DialogTypeEnum;\n  sizes: typeof DialogSizeEnum;\n}\n\nexport default withStaticProps<DialogContentContainerProps, DialogContentContainerStaticProps>(DialogContentContainer, {\n  types: DialogTypeEnum,\n  sizes: DialogSizeEnum\n});\n"],"names":["withStaticProps","forwardRef","_a","ref","_a$className","className","_a$ariaLabelledby","ariaLabelledby","_a$ariaDescribedby","ariaDescribedby","_a$type","type","_a$size","size","children","style","_a$dataTestid","dataTestId","getTestId","ComponentDefaultTestId","DIALOG_CONTENT_CONTAINER","id","props","__rest","componentRef","useRef","mergedRef","useMergeRef","React","createElement","Object","assign","role","cx","styles","dialogContentContainer","getStyle","camelCase","types","DialogTypeEnum","sizes","DialogSizeEnum"],"mappings":"+kBAsCA,IA8CeA,EAAAA,EA9CgBC,GAC7B,SACEC,EAYAC,GAZA,IACIC,EAQwFF,EAP1FG,UAAAA,OAAY,IAAHD,EAAG,GAAEA,EAAAE,EAO4EJ,EAN1FK,eAAAA,OAAiB,IAAHD,EAAG,GAAEA,EAAAE,EAMuEN,EAL1FO,gBAAAA,OAAkB,IAAHD,EAAG,GAAEA,EAAAE,EAKsER,EAJ1FS,KAAAA,OAAO,IAAHD,EAAG,UAASA,EAAAE,EAI0EV,EAH1FW,KAAAA,OAAO,IAAHD,EAAG,QAAOA,EACdE,EAE0FZ,EAF1FY,SACAC,EAC0Fb,EAD1Fa,MAAKC,EACqFd,EAA1F,eAAee,OAAaC,IAAHF,EAAGE,EAAUC,EAAuBC,yBAA6BlB,EAR1FmB,IAQ0FL,EACvFM,EAAKC,EAAArB,EAVV,sGAcMsB,EAAeC,EAAO,MACtBC,EAAYC,EAAYxB,EAAKqB,GAEnC,OACEI,EAAAC,cAAA,MAAAC,OAAAC,OAAA,CACEC,KAAK,SAAQ,cACAf,EAAU,kBACNV,EAAc,mBACbE,EAClBN,IAAKuB,EACLX,MAAOA,EACPV,UAAW4B,EACTC,EAAOC,uBACP9B,EACA+B,EAASF,EAAQG,EAAU,SAAW1B,IACtCyB,EAASF,EAAQG,EAAU,SAAWxB,MAEpCS,GAEHR,EAGP,IAQqH,CACrHwB,MAAOC,EACPC,MAAOC"}