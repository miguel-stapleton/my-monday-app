{"version":3,"file":"Flex.js","sources":["../../../../src/components/Flex/Flex.tsx"],"sourcesContent":["import React, { forwardRef, useMemo, useRef } from \"react\";\nimport cx from \"classnames\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport Clickable from \"../../components/Clickable/Clickable\";\nimport {\n  FlexAlign as FlexAlignEnum,\n  FlexDirection as FlexDirectionEnum,\n  FlexGap as FlexGapEnum,\n  FlexJustify as FlexJustifyEnum\n} from \"./FlexConstants\";\nimport { FlexDirection, FlexJustify, FlexAlign, FlexGap, FlexShorthand } from \"./Flex.types\";\nimport { ElementContent, withStaticProps, VibeComponentProps } from \"../../types\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport styles from \"./Flex.module.scss\";\nimport { camelCase } from \"lodash-es\";\n\nexport interface FlexProps extends VibeComponentProps {\n  /**\n   * Inline styles applied to the flex container.\n   */\n  style?: object;\n  /**\n   * The direction of the flex container.\n   */\n  direction?: FlexDirection;\n  /**\n   * The HTML element or component used as the root.\n   */\n  elementType?: React.ElementType;\n  /**\n   * If true, allows wrapping of flex items.\n   */\n  wrap?: boolean;\n  /**\n   * The content inside the flex container.\n   */\n  children?: ElementContent | ElementContent[];\n  /**\n   * Defines how flex items are aligned along the main axis.\n   */\n  justify?: FlexJustify;\n  /**\n   * Defines how flex items are aligned along the cross axis.\n   */\n  align?: FlexAlign;\n  /**\n   * The gap between flex items.\n   */\n  gap?: FlexGap | number;\n  /**\n   * The flex shorthand of the flex container.\n   */\n  flex?: FlexShorthand;\n  /**\n   * The label of the flex container for accessibility.\n   */\n  ariaLabel?: string;\n  /**\n   * The tab order of the element.\n   */\n  tabIndex?: number;\n  /**\n   * Callback fired when the flex container is clicked.\n   */\n  onClick?: (event: React.MouseEvent) => void;\n  /**\n   * ID of the element describing the flex container.\n   */\n  ariaLabelledby?: string;\n}\n\nconst Flex = forwardRef(\n  (\n    {\n      className,\n      id,\n      elementType = \"div\",\n      direction = \"row\",\n      wrap = false,\n      children,\n      justify = \"start\",\n      align = \"center\",\n      flex,\n      gap,\n      onClick,\n      style,\n      ariaLabelledby,\n      ariaLabel,\n      tabIndex,\n      \"data-testid\": dataTestId\n    }: FlexProps,\n    ref: React.ForwardedRef<HTMLElement>\n  ) => {\n    const componentRef = useRef<HTMLElement>(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n\n    const gapStyle = useMemo(() => {\n      if (!gap) {\n        return;\n      }\n      if (typeof gap === \"number\") {\n        return { gap: `${gap}px` };\n      }\n      return { gap: `var(--spacing-${gap})` };\n    }, [gap]);\n\n    const flexStyle = useMemo(() => {\n      if (!flex) return {};\n\n      if ([\"string\", \"number\"].includes(typeof flex)) {\n        return { flex };\n      }\n\n      if (typeof flex === \"object\") {\n        return {\n          flexGrow: flex.grow,\n          flexShrink: flex.shrink,\n          flexBasis: flex.basis\n        };\n      }\n\n      return {};\n    }, [flex]);\n\n    const overrideStyle = useMemo(() => ({ ...style, ...gapStyle, ...flexStyle }), [style, gapStyle, flexStyle]);\n    const onClickProps = useMemo(() => {\n      if (onClick) return { elementType, ariaLabelledby };\n      return { \"aria-labelledby\": ariaLabelledby };\n    }, [onClick, elementType, ariaLabelledby]);\n    const Element = onClick ? Clickable : elementType;\n\n    return (\n      <Element\n        id={id}\n        data-testid={dataTestId}\n        {...onClickProps}\n        ref={mergedRef}\n        className={cx(\n          styles.container,\n          getStyle(styles, camelCase(`direction-${direction}`)),\n          getStyle(styles, camelCase(`justify-${justify}`)),\n          getStyle(styles, camelCase(`align-${align}`)),\n          className,\n          {\n            [styles.wrap]: wrap\n          }\n        )}\n        tabIndex={tabIndex}\n        onClick={onClick}\n        style={overrideStyle}\n        aria-label={ariaLabel}\n      >\n        {children}\n      </Element>\n    );\n  }\n);\n\ninterface FlexStaticProps {\n  justify: typeof FlexJustifyEnum;\n  align: typeof FlexAlignEnum;\n  gaps: typeof FlexGapEnum;\n  directions: typeof FlexDirectionEnum;\n}\n\nexport default withStaticProps<FlexProps, FlexStaticProps>(Flex, {\n  justify: FlexJustifyEnum,\n  align: FlexAlignEnum,\n  gaps: FlexGapEnum,\n  directions: FlexDirectionEnum\n});\n"],"names":["withStaticProps","forwardRef","_ref","ref","className","id","_ref$elementType","elementType","_ref$direction","direction","_ref$wrap","wrap","children","_ref$justify","justify","_ref$align","align","flex","gap","onClick","style","ariaLabelledby","ariaLabel","tabIndex","dataTestId","componentRef","useRef","mergedRef","useMergeRef","gapStyle","useMemo","concat","flexStyle","includes","_typeof","flexGrow","grow","flexShrink","shrink","flexBasis","basis","overrideStyle","Object","assign","onClickProps","React","createElement","Clickable","cx","styles","container","getStyle","camelCase","_defineProperty","FlexJustifyEnum","FlexAlignEnum","gaps","FlexGapEnum","directions","FlexDirectionEnum"],"mappings":"imBAuEA,IA8FeA,EAAAA,EA9FFC,GACX,SAAAC,EAmBEC,GACE,IAlBAC,EAASF,EAATE,UACAC,EAAEH,EAAFG,GAAEC,EAAAJ,EACFK,YAAAA,OAAc,IAAHD,EAAG,MAAKA,EAAAE,EAAAN,EACnBO,UAAAA,OAAY,IAAHD,EAAG,MAAKA,EAAAE,EAAAR,EACjBS,KAAAA,OAAO,IAAHD,GAAQA,EACZE,EAAQV,EAARU,SAAQC,EAAAX,EACRY,QAAAA,OAAU,IAAHD,EAAG,QAAOA,EAAAE,EAAAb,EACjBc,MAAAA,OAAQ,IAAHD,EAAG,SAAQA,EAChBE,EAAIf,EAAJe,KACAC,EAAGhB,EAAHgB,IACAC,EAAOjB,EAAPiB,QACAC,EAAKlB,EAALkB,MACAC,EAAcnB,EAAdmB,eACAC,EAASpB,EAAToB,UACAC,EAAQrB,EAARqB,SACeC,EAAUtB,EAAzB,eAIIuB,EAAeC,EAAoB,MACnCC,EAAYC,EAAYzB,EAAKsB,GAE7BI,EAAWC,GAAQ,WACvB,GAAKZ,EAGL,MAAmB,iBAARA,EACF,CAAEA,IAAG,GAAAa,OAAKb,EAAG,OAEf,CAAEA,IAAG,iBAAAa,OAAmBb,EAAG,KACpC,GAAG,CAACA,IAEEc,EAAYF,GAAQ,WACxB,OAAKb,EAED,CAAC,SAAU,UAAUgB,SAAQC,EAAQjB,IAChC,CAAEA,KAAAA,GAGS,WAAhBiB,EAAOjB,GACF,CACLkB,SAAUlB,EAAKmB,KACfC,WAAYpB,EAAKqB,OACjBC,UAAWtB,EAAKuB,OAIb,GAdW,EAepB,GAAG,CAACvB,IAEEwB,EAAgBX,GAAQ,WAAA,OAAYY,OAAAC,OAAAD,OAAAC,OAAAD,OAAAC,OAAA,CAAA,EAAAvB,GAAUS,GAAaG,EAAY,GAAE,CAACZ,EAAOS,EAAUG,IAC3FY,EAAed,GAAQ,WAC3B,OAAIX,EAAgB,CAAEZ,YAAAA,EAAac,eAAAA,GAC5B,CAAE,kBAAmBA,EAC7B,GAAE,CAACF,EAASZ,EAAac,IAG1B,OACEwB,EAAAC,cAHc3B,EAAU4B,EAAYxC,EAG5BmC,OAAAC,OAAA,CACNtC,GAAIA,EAAE,cACOmB,GACToB,EAAY,CAChBzC,IAAKwB,EACLvB,UAAW4C,EACTC,EAAOC,UACPC,EAASF,EAAQG,EAAS,aAAArB,OAActB,KACxC0C,EAASF,EAAQG,EAAS,WAAArB,OAAYjB,KACtCqC,EAASF,EAAQG,EAAS,SAAArB,OAAUf,KACpCZ,EAASiD,EAAA,CAAA,EAENJ,EAAOtC,KAAOA,IAGnBY,SAAUA,EACVJ,QAASA,EACTC,MAAOqB,EACK,aAAAnB,IAEXV,EAGP,IAU+D,CAC/DE,QAASwC,EACTtC,MAAOuC,EACPC,KAAMC,EACNC,WAAYC"}