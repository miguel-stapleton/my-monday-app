{"version":3,"file":"Switch.js","sources":["../../../../src/components/Switch/Switch.tsx"],"sourcesContent":["import React, { ChangeEvent, forwardRef, ReactElement, useMemo } from \"react\";\nimport cx from \"classnames\";\nimport useSwitch from \"../../hooks/useSwitch\";\nimport { VibeComponentProps } from \"../../types\";\nimport { MockToggleProps } from \"../Toggle/MockToggle\";\nimport styles from \"./Switch.module.scss\";\n\nexport interface SwitchProps extends VibeComponentProps {\n  /**\n   * The name of the switch input.\n   */\n  name?: string;\n  /**\n   * The value associated with the switch.\n   */\n  value?: string;\n  /**\n   * The ARIA role of the switch.\n   */\n  role?: string;\n  /**\n   * If true, the switch is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * The ARIA label for accessibility.\n   */\n  ariaLabel?: string;\n  /**\n   * The ID of the element labeling the switch.\n   */\n  ariaLabelledBy?: string;\n  /**\n   * If true, the switch is checked.\n   */\n  checked?: boolean;\n  /**\n   * Class name applied to the input element.\n   */\n  inputClassName?: string;\n  /**\n   * Callback fired when the switch state changes.\n   */\n  onChange?: (value: boolean, event: ChangeEvent<HTMLInputElement>) => void;\n  /**\n   * The ID of the element controlled by the switch.\n   */\n  ariaControls?: string;\n  /**\n   * If true, the switch is checked by default.\n   */\n  defaultChecked?: boolean;\n  /**\n   * The child component rendered inside the switch.\n   */\n  children?: ReactElement<MockToggleProps>;\n  /**\n   * Class name applied to the wrapper element.\n   */\n  wrapperClassName?: string;\n}\n\n// TODO no story\nconst Switch = forwardRef(\n  (\n    {\n      id,\n      name,\n      value,\n      role,\n      disabled,\n      ariaLabel,\n      ariaLabelledBy,\n      checked,\n      inputClassName,\n      onChange,\n      ariaControls,\n      defaultChecked,\n      children: originalChildren,\n      wrapperClassName,\n      \"data-testid\": dataTestId\n    }: SwitchProps,\n    ref: React.ForwardedRef<HTMLInputElement>\n  ) => {\n    const { onChange: overrideOnChange, isChecked: overrideChecked } = useSwitch({\n      isDisabled: disabled,\n      isChecked: checked,\n      defaultChecked,\n      onChange\n    });\n\n    const children = useMemo(\n      () =>\n        React.cloneElement(originalChildren, {\n          ...originalChildren?.props,\n          checked: overrideChecked\n        }),\n      [originalChildren, overrideChecked]\n    );\n\n    return (\n      <label htmlFor={id} className={wrapperClassName}>\n        <input\n          ref={ref}\n          id={id}\n          aria-controls={ariaControls}\n          value={value}\n          name={name}\n          type=\"checkbox\"\n          className={cx(styles[\"hidden-switch\"], inputClassName)}\n          checked={overrideChecked}\n          role={role ? role : \"switch\"}\n          onChange={overrideOnChange}\n          disabled={disabled}\n          aria-label={ariaLabel}\n          aria-labelledby={ariaLabelledBy}\n          aria-checked={overrideChecked}\n          data-testid={dataTestId}\n        />\n        {children}\n      </label>\n    );\n  }\n);\n\nexport default Switch;\n"],"names":["Switch","forwardRef","_ref","ref","id","name","value","role","disabled","ariaLabel","ariaLabelledBy","inputClassName","ariaControls","originalChildren","children","wrapperClassName","dataTestId","_useSwitch","useSwitch","isDisabled","isChecked","checked","defaultChecked","onChange","overrideOnChange","overrideChecked","useMemo","React","cloneElement","Object","assign","props","htmlFor","className","createElement","type","cx","styles"],"mappings":"kKA+DMA,IAAAA,EAASC,GACb,SAAAC,EAkBEC,GACE,IAjBAC,EAAEF,EAAFE,GACAC,EAAIH,EAAJG,KACAC,EAAKJ,EAALI,MACAC,EAAIL,EAAJK,KACAC,EAAQN,EAARM,SACAC,EAASP,EAATO,UACAC,EAAcR,EAAdQ,eAEAC,EAAcT,EAAdS,eAEAC,EAAYV,EAAZU,aAEUC,EAAgBX,EAA1BY,SACAC,EAAgBb,EAAhBa,iBACeC,EAAUd,EAAzB,eAIFe,EAAmEC,EAAU,CAC3EC,WAAYX,EACZY,UAbOlB,EAAPmB,QAcAC,eAVcpB,EAAdoB,eAWAC,SAbQrB,EAARqB,WASgBC,EAAgBP,EAA1BM,SAAuCE,EAAeR,EAA1BG,UAO9BN,EAAWY,GACf,WAAA,OACEC,EAAMC,aAAaf,EAAgBgB,OAAAC,OAAAD,OAAAC,OAAA,CAAA,EAC9BjB,aAAA,EAAAA,EAAkBkB,OACrB,CAAAV,QAASI,IACT,GACJ,CAACZ,EAAkBY,IAGrB,OACEE,yBAAOK,QAAS5B,EAAI6B,UAAWlB,GAC7BY,EAAAO,cAAA,QAAA,CACE/B,IAAKA,EACLC,GAAIA,EAAE,gBACSQ,EACfN,MAAOA,EACPD,KAAMA,EACN8B,KAAK,WACLF,UAAWG,EAAGC,EAAO,iBAAkB1B,GACvCU,QAASI,EACTlB,KAAMA,GAAc,SACpBgB,SAAUC,EACVhB,SAAUA,EAAQ,aACNC,EAAS,kBACJC,EAAc,eACjBe,EAAe,cAChBT,IAEdF,EAGP"}