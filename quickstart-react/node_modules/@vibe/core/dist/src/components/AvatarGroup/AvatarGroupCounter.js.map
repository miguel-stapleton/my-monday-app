{"version":3,"file":"AvatarGroupCounter.js","sources":["../../../../src/components/AvatarGroup/AvatarGroupCounter.tsx"],"sourcesContent":["import React, { ReactElement, useCallback, useRef } from \"react\";\nimport cx from \"classnames\";\nimport { AvatarProps } from \"../Avatar/Avatar\";\nimport Counter from \"../Counter/Counter\";\nimport MenuButton from \"../MenuButton/MenuButton\";\nimport Menu from \"../Menu/Menu/Menu\";\nimport AvatarMenuItem from \"../Menu/MenuItem/AvatarMenuItem\";\nimport AvatarGroupCounterTooltipContainer from \"./AvatarGroupCounterTooltipContainer\";\nimport VibeComponentProps from \"../../types/VibeComponentProps\";\nimport { AvatarSize, AvatarType } from \"../Avatar/Avatar.types\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport { AvatarGroupCounterVisualProps } from \"./AvatarGroup.types\";\nimport { TooltipProps } from \"../Tooltip/Tooltip\";\nimport { avatarOnClick } from \"./AvatarGroupHelper\";\nimport styles from \"./AvatarGroupCounter.module.scss\";\nimport { AVATAR_GROUP_COUNTER_AVATAR_SIZE } from \"./AvatarGroupConstants\";\n\nexport interface AvatarGroupCounterProps extends VibeComponentProps {\n  /**\n   * The list of avatars hidden behind the counter.\n   */\n  counterTooltipAvatars?: ReactElement<AvatarProps>[];\n  /**\n   * Props for customizing the counter appearance.\n   */\n  counterProps?: AvatarGroupCounterVisualProps;\n  /**\n   * Props for customizing the counter tooltip.\n   */\n  counterTooltipCustomProps?: Partial<TooltipProps>;\n  /**\n   * If true, the counter tooltip uses a virtualized list for performance optimization.\n   */\n  counterTooltipIsVirtualizedList?: boolean;\n  /**\n   * The size of the counter.\n   */\n  size?: AvatarSize;\n  /**\n   * The type of the avatars in the counter.\n   */\n  type?: AvatarType;\n  /**\n   * The label of the counter for accessibility.\n   */\n  counterAriaLabel?: string;\n  /**\n   * If true, the counter is disabled and non-interactive.\n   */\n  disabled?: boolean;\n}\n\nconst AvatarGroupCounter: React.FC<AvatarGroupCounterProps> = ({\n  counterTooltipAvatars = [],\n  counterProps,\n  counterTooltipCustomProps,\n  counterTooltipIsVirtualizedList = false,\n  size = \"medium\",\n  type,\n  counterAriaLabel,\n  disabled\n}: AvatarGroupCounterProps) => {\n  const {\n    color: counterColor = \"light\",\n    count: counterValue = counterTooltipAvatars.length,\n    prefix: counterPrefix = \"+\",\n    maxDigits: counterMaxDigits = 3,\n    ariaLabelItemsName: counterAriaLabelItemsName = \"items\",\n    noAnimation,\n    dialogContainerSelector,\n    tabIndex: counterTabIndex = 0\n  } = counterProps || {};\n\n  const counterSizeStyle = getStyle(styles, size?.toString());\n  const counterColorStyle = styles[counterColor];\n\n  const focusPrevPlaceholderRef = useRef(null);\n  const focusNextPlaceholderRef = useRef(null);\n  const counterContainerRef = useRef(null);\n  const counterComponent = useCallback(() => {\n    return (\n      <Counter\n        color={counterColor}\n        count={counterValue}\n        prefix={counterPrefix}\n        maxDigits={counterMaxDigits}\n        ariaLabel={counterAriaLabel ? counterAriaLabel : `Tab for more ${counterAriaLabelItemsName}`}\n        noAnimation={noAnimation}\n        counterClassName={cx({ [styles.disabled]: disabled })}\n        size={size === \"xs\" ? \"xs\" : undefined}\n      />\n    );\n  }, [\n    counterAriaLabel,\n    counterAriaLabelItemsName,\n    counterColor,\n    counterMaxDigits,\n    counterPrefix,\n    counterValue,\n    disabled,\n    noAnimation\n  ]);\n\n  if (!counterTooltipAvatars.length && !counterValue) {\n    return null;\n  }\n\n  if (disabled) {\n    return (\n      <div\n        ref={counterContainerRef}\n        className={cx(styles.counterContainer, styles.disabled, counterSizeStyle, counterColorStyle)}\n      >\n        {counterComponent()}\n      </div>\n    );\n  }\n\n  const areAvatarsClickable = counterTooltipAvatars.some(a => a.props?.onClick);\n  if (areAvatarsClickable) {\n    return (\n      <MenuButton\n        component={counterComponent}\n        zIndex={1}\n        className={cx(styles.counterContainer, counterSizeStyle, counterColorStyle)}\n        ariaLabel={counterAriaLabel ? counterAriaLabel : `${counterValue} additional ${counterAriaLabelItemsName}`}\n        dialogContainerSelector={dialogContainerSelector}\n      >\n        <Menu id=\"menu\" size={Menu.sizes.MEDIUM} className={styles.menu} focusItemIndexOnMount={0}>\n          {counterTooltipAvatars.map((avatar, index) => {\n            return (\n              // eslint-disable-next-line react/jsx-key\n              <AvatarMenuItem\n                menuItemProps={{\n                  key: avatar.props?.id || String(index),\n                  title: (avatar.props?.tooltipProps?.content as string) || avatar?.props?.ariaLabel,\n                  onClick: (event: React.MouseEvent | React.KeyboardEvent) => avatarOnClick(event, avatar.props)\n                }}\n                avatarProps={{\n                  ...avatar.props,\n                  customSize: AVATAR_GROUP_COUNTER_AVATAR_SIZE,\n                  ariaLabel: \"\",\n                  tabIndex: -1\n                }}\n              />\n            );\n          })}\n        </Menu>\n      </MenuButton>\n    );\n  }\n\n  return (\n    <AvatarGroupCounterTooltipContainer\n      focusPrevPlaceholderRef={focusPrevPlaceholderRef}\n      focusNextPlaceholderRef={focusNextPlaceholderRef}\n      counterContainerRef={counterContainerRef}\n      avatars={counterTooltipAvatars}\n      counterTooltipCustomProps={counterTooltipCustomProps}\n      counterTooltipIsVirtualizedList={counterTooltipIsVirtualizedList}\n      type={type}\n    >\n      <div tabIndex={-1} ref={focusPrevPlaceholderRef} />\n      {/* eslint-disable jsx-a11y/no-noninteractive-tabindex */}\n      <div\n        tabIndex={counterTabIndex}\n        className={cx(styles.counterContainer, counterSizeStyle, counterColorStyle)}\n        ref={counterContainerRef}\n      >\n        {/* eslint-enable jsx-a11y/no-noninteractive-tabindex */}\n        {counterComponent()}\n        <div tabIndex={-1} ref={focusNextPlaceholderRef} />\n      </div>\n    </AvatarGroupCounterTooltipContainer>\n  );\n};\n\nexport default AvatarGroupCounter;\n"],"names":["AvatarGroupCounter","_ref","_ref$counterTooltipAv","counterTooltipAvatars","counterTooltipCustomProps","_ref$counterTooltipIs","counterTooltipIsVirtualizedList","_ref$size","size","type","counterAriaLabel","disabled","_ref2","counterProps","_ref2$color","color","counterColor","_ref2$count","count","counterValue","length","_ref2$prefix","prefix","counterPrefix","_ref2$maxDigits","maxDigits","counterMaxDigits","_ref2$ariaLabelItemsN","ariaLabelItemsName","counterAriaLabelItemsName","noAnimation","dialogContainerSelector","_ref2$tabIndex","tabIndex","counterTabIndex","counterSizeStyle","getStyle","styles","counterColorStyle","focusPrevPlaceholderRef","useRef","focusNextPlaceholderRef","counterContainerRef","counterComponent","useCallback","React","createElement","Counter","ariaLabel","concat","counterClassName","cx","_defineProperty","undefined","ref","className","counterContainer","some","a","_a","props","onClick","MenuButton","component","zIndex","Menu","id","sizes","MEDIUM","menu","focusItemIndexOnMount","map","avatar","index","AvatarMenuItem","menuItemProps","key","String","title","_c","_b","tooltipProps","content","_d","event","avatarOnClick","avatarProps","customSize","AVATAR_GROUP_COUNTER_AVATAR_SIZE","AvatarGroupCounterTooltipContainer","avatars"],"mappings":"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"}