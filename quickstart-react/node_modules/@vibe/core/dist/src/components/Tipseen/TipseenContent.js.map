{"version":3,"file":"TipseenContent.js","sources":["../../../../src/components/Tipseen/TipseenContent.tsx"],"sourcesContent":["import React, { FC, useContext, useMemo } from \"react\";\nimport cx from \"classnames\";\nimport Button from \"../../components/Button/Button\";\nimport { DISMISS_BUTTON_TEXT, SUBMIT_BUTTON_TEXT, TipseenColor } from \"./TipseenConstants\";\nimport TipseenBasicContent from \"./TipseenBasicContent\";\nimport { VibeComponentProps } from \"../../types\";\nimport { ElementContent } from \"../../types/ElementContent\";\nimport styles from \"./TipseenContent.module.scss\";\nimport { getTestId } from \"../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../tests/constants\";\nimport { TipseenContext } from \"./Tipseen\";\nimport { ButtonColor } from \"../Button/ButtonConstants\";\nimport { SubIcon } from \"../../types\";\n\nexport interface TipseenContentProps extends VibeComponentProps {\n  /**\n   * The title text displayed in the Tipseen content.\n   */\n  title?: string;\n  /**\n   * Class name applied to the Tipseen title.\n   */\n  titleClassName?: string;\n  /**\n   * If true, hides the dismiss button.\n   */\n  hideDismiss?: boolean;\n  /**\n   * The content inside the Tipseen.\n   */\n  children?: ElementContent;\n  /**\n   * If true, hides the submit button.\n   */\n  hideSubmit?: boolean;\n  /**\n   * The text displayed on the submit button.\n   */\n  submitButtonText?: string;\n  /**\n   * Icon to display in the submit button\n   */\n  submitButtonIcon?: SubIcon;\n  /**\n   * Callback fired when the submit button is clicked.\n   */\n  onSubmit?: (event: React.MouseEvent) => void;\n  /**\n   * The text displayed on the dismiss button.\n   */\n  dismissButtonText?: string;\n  /**\n   * Callback fired when the dismiss button is clicked.\n   */\n  onDismiss?: (event: React.MouseEvent) => void;\n}\n\nconst TipseenContent: FC<TipseenContentProps> = ({\n  id,\n  title,\n  titleClassName,\n  children = null,\n  hideDismiss = true,\n  hideSubmit,\n  submitButtonText = SUBMIT_BUTTON_TEXT,\n  submitButtonIcon,\n  onSubmit,\n  dismissButtonText = DISMISS_BUTTON_TEXT,\n  onDismiss\n}) => {\n  const color = useContext(TipseenContext);\n  const buttonColor = useMemo(() => {\n    return color === TipseenColor.INVERTED ? ButtonColor.ON_INVERTED_BACKGROUND : ButtonColor.ON_PRIMARY_COLOR;\n  }, [color]);\n\n  return (\n    <TipseenBasicContent title={title} titleClassName={titleClassName} id={id}>\n      {children ? <span>{children}</span> : null}\n      <div className={cx(styles.buttons)}>\n        {hideDismiss ? null : (\n          <Button\n            kind=\"tertiary\"\n            color={buttonColor}\n            className={styles.dismiss}\n            size=\"small\"\n            onClick={onDismiss}\n            data-testid={getTestId(ComponentDefaultTestId.TIPSEEN_CONTENT_DISMISS)}\n          >\n            {dismissButtonText}\n          </Button>\n        )}\n        {hideSubmit ? null : (\n          <Button\n            kind=\"primary\"\n            color={buttonColor}\n            size=\"small\"\n            onClick={onSubmit}\n            data-testid={getTestId(ComponentDefaultTestId.TIPSEEN_CONTENT_SUBMIT)}\n            leftIcon={submitButtonIcon}\n          >\n            {submitButtonText}\n          </Button>\n        )}\n      </div>\n    </TipseenBasicContent>\n  );\n};\n\nexport default TipseenContent;\n"],"names":["TipseenContent","_ref","id","title","titleClassName","_ref$children","children","_ref$hideDismiss","hideDismiss","hideSubmit","_ref$submitButtonText","submitButtonText","SUBMIT_BUTTON_TEXT","submitButtonIcon","onSubmit","_ref$dismissButtonTex","dismissButtonText","DISMISS_BUTTON_TEXT","onDismiss","color","useContext","TipseenContext","buttonColor","useMemo","TipseenColor","INVERTED","ButtonColor","ON_INVERTED_BACKGROUND","ON_PRIMARY_COLOR","React","createElement","TipseenBasicContent","className","cx","styles","buttons","Button","kind","dismiss","size","onClick","getTestId","ComponentDefaultTestId","TIPSEEN_CONTENT_DISMISS","TIPSEEN_CONTENT_SUBMIT","leftIcon"],"mappings":"2gBAyDA,IAAMA,EAA0C,SAA5BC,GAYf,IAXHC,EAAED,EAAFC,GACAC,EAAKF,EAALE,MACAC,EAAcH,EAAdG,eAAcC,EAAAJ,EACdK,SAAAA,OAAW,IAAHD,EAAG,KAAIA,EAAAE,EAAAN,EACfO,YAAAA,OAAc,IAAHD,GAAOA,EAClBE,EAAUR,EAAVQ,WAAUC,EAAAT,EACVU,iBAAAA,OAAmBC,IAAHF,EAAGE,EAAkBF,EACrCG,EAAgBZ,EAAhBY,iBACAC,EAAQb,EAARa,SAAQC,EAAAd,EACRe,kBAAAA,OAAoBC,IAAHF,EAAGE,EAAmBF,EACvCG,EAASjB,EAATiB,UAEMC,EAAQC,EAAWC,GACnBC,EAAcC,GAAQ,WAC1B,OAAOJ,IAAUK,EAAaC,SAAWC,EAAYC,uBAAyBD,EAAYE,gBAC5F,GAAG,CAACT,IAEJ,OACEU,EAAAC,cAACC,EAAmB,CAAC5B,MAAOA,EAAOC,eAAgBA,EAAgBF,GAAIA,GACpEI,EAAWuB,EAAAC,cAAA,OAAA,KAAOxB,GAAmB,KACtCuB,EAAAC,cAAA,MAAA,CAAKE,UAAWC,EAAGC,EAAOC,UACvB3B,EAAc,KACbqB,EAAAC,cAACM,EACC,CAAAC,KAAK,WACLlB,MAAOG,EACPU,UAAWE,EAAOI,QAClBC,KAAK,QACLC,QAAStB,gBACIuB,EAAUC,EAAuBC,0BAE7C3B,GAGJP,EAAa,KACZoB,EAACC,cAAAM,GACCC,KAAK,UACLlB,MAAOG,EACPiB,KAAK,QACLC,QAAS1B,EACI,cAAA2B,EAAUC,EAAuBE,wBAC9CC,SAAUhC,GAETF,IAMb"}