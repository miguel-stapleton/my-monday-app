{"version":3,"file":"EditableText.js","sources":["../../../../src/components/EditableText/EditableText.tsx"],"sourcesContent":["import { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport React, { forwardRef } from \"react\";\nimport { VibeComponentProps, withStaticProps } from \"../../types\";\nimport styles from \"./EditableText.module.scss\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport { camelCase } from \"lodash-es\";\nimport EditableTypography, { EditableTypographyImplementationProps } from \"../EditableTypography/EditableTypography\";\nimport { TextType as TextTypeEnum, TextWeight as TextWeightEnum } from \"../Text/TextConstants\";\nimport { TextType, TextWeight } from \"../Text\";\nimport Text from \"../Text/Text\";\nimport cx from \"classnames\";\n\nexport interface EditableTextProps extends VibeComponentProps, EditableTypographyImplementationProps {\n  /**\n   * The text style variant.\n   */\n  type?: TextType;\n  /**\n   * The font weight of the text.\n   */\n  weight?: TextWeight;\n  /**\n   * If true, enables editing multiple lines of text.\n   */\n  multiline?: boolean;\n}\n\nconst EditableText = forwardRef(\n  (\n    {\n      type = \"text2\",\n      weight = \"normal\",\n      \"data-testid\": dataTestId,\n      id,\n      multiline,\n      ...editableTypographyProps\n    }: EditableTextProps,\n    ref: React.ForwardedRef<HTMLElement>\n  ) => {\n    return (\n      <EditableTypography\n        className={styles.editableText}\n        ref={ref}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.EDITABLE_TEXT, id)}\n        component={Text}\n        typographyClassName={cx(getStyle(styles, camelCase(type + \"-\" + weight)), styles.typography)}\n        clearable\n        type={type}\n        weight={weight}\n        multiline={multiline}\n        {...editableTypographyProps}\n      />\n    );\n  }\n);\n\ninterface EditableTextStaticProps {\n  types: typeof TextTypeEnum;\n  weights: typeof TextWeightEnum;\n}\n\nexport default withStaticProps<EditableTextProps, EditableTextStaticProps>(EditableText, {\n  types: TextTypeEnum,\n  weights: TextWeightEnum\n});\n"],"names":["withStaticProps","forwardRef","_a","ref","type","_a$type","_a$weight","weight","dataTestId","id","multiline","editableTypographyProps","__rest","React","createElement","EditableTypography","Object","assign","className","styles","editableText","getTestId","ComponentDefaultTestId","EDITABLE_TEXT","component","Text","typographyClassName","cx","getStyle","camelCase","typography","clearable","types","TextTypeEnum","weights","TextWeightEnum"],"mappings":"mmBA2BA,IAkCeA,EAAAA,EAlCMC,GACnB,SACEC,EAQAC,SAHWD,EAJTE,KAAAA,OAAO,IAAHC,EAAG,QAAOA,EAAAC,EAILJ,EAHTK,OAAAA,OAAS,IAAHD,EAAG,SAAQA,EACFE,EAENN,EAFT,eACAO,EACSP,EADTO,GACAC,EAASR,EAATQ,UACGC,EAAuBC,EAAAV,EAN5B,kDAUA,OACEW,EAAAC,cAACC,EAAkBC,OAAAC,OAAA,CACjBC,UAAWC,EAAOC,aAClBjB,IAAKA,gBACQK,GAAca,EAAUC,EAAuBC,cAAed,GAC3Ee,UAAWC,EACXC,oBAAqBC,EAAGC,EAAST,EAAQU,EAAUzB,EAAO,IAAMG,IAAUY,EAAOW,YACjFC,WAAS,EACT3B,KAAMA,EACNG,OAAQA,EACRG,UAAWA,GACPC,GAGV,IAQuF,CACvFqB,MAAOC,EACPC,QAASC"}