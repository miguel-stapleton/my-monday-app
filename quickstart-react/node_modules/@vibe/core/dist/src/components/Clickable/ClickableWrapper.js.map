{"version":3,"file":"ClickableWrapper.js","sources":["../../../../src/components/Clickable/ClickableWrapper.tsx"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport Clickable from \"./Clickable\";\nimport { VibeComponentProps } from \"../../types\";\nimport { ClickableProps } from \"./Clickable\";\n\nexport interface ClickableWrapperProps extends VibeComponentProps {\n  /**\n   * The content inside the wrapper.\n   */\n  children: React.ReactNode;\n  /**\n   * If true, wraps the content in a `Clickable` component.\n   */\n  isClickable: boolean;\n  /**\n   * Props passed to the `Clickable` component.\n   */\n  clickableProps: ClickableProps;\n}\n\nconst ClickableWrapper = forwardRef(\n  (\n    { children, isClickable = true, clickableProps = {} }: ClickableWrapperProps,\n    ref: React.ForwardedRef<HTMLElement>\n  ) => {\n    if (!isClickable) {\n      return <>{children}</>;\n    }\n\n    return (\n      <Clickable {...clickableProps} ref={ref}>\n        {children}\n      </Clickable>\n    );\n  }\n);\n\nexport default ClickableWrapper;\n"],"names":["ClickableWrapper","forwardRef","_ref","ref","children","_ref$isClickable","isClickable","_ref$clickableProps","clickableProps","React","createElement","Clickable","Object","assign","Fragment"],"mappings":"oEAoBMA,IAAAA,EAAmBC,GACvB,SAAAC,EAEEC,GACE,IAFAC,EAAQF,EAARE,SAAQC,EAAAH,EAAEI,YAAkBC,EAAAL,EAAEM,eAGhC,YAH0B,IAAHH,GAAOA,EAQ5BI,EAAAC,cAACC,EAASC,OAAAC,OAAA,CAAA,OARkC,IAAAN,EAAG,CAAA,EAAEA,EAQpB,CAAEJ,IAAKA,IACjCC,GALIK,EAAAC,cAAAD,EAAAK,SAAA,KAAGV,EAQd"}