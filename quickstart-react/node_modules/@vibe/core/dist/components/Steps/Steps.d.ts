import React, { ReactElement } from "react";
import { StepsColor as StepsColorEnum, StepsType as StepsTypeEnum } from "./StepsConstants";
import { StepsColor, StepsType } from "./Steps.types";
import { ButtonProps } from "../Button";
import { VibeComponentProps } from "../../types";
export interface StepsProps extends VibeComponentProps {
    /**
     * The index of the currently active step.
     */
    activeStepIndex?: number;
    /**
     * Callback fired when the active step changes.
     */
    onChangeActiveStep?: (e: React.MouseEvent, stepIndex: number) => void;
    /**
     * If true, hides the navigation buttons.
     */
    areNavigationButtonsHidden?: boolean;
    /**
     * The list of steps in the steps component.
     */
    steps?: ReactElement[];
    /**
     * The visual style of the steps component.
     */
    type?: StepsType;
    /**
     * The color theme of the steps component.
     */
    color?: StepsColor;
    /**
     * If true, the content is displayed above the step navigation.
     */
    isContentOnTop?: boolean;
    /**
     * If true, hides the icons in the navigation buttons.
     */
    areButtonsIconsHidden?: boolean;
    /**
     * Props applied to the back button.
     */
    backButtonProps?: Partial<ButtonProps>;
    /**
     * Props applied to the next button.
     */
    nextButtonProps?: Partial<ButtonProps>;
    /**
     * Props applied to the finish button.
     */
    finishButtonProps?: Partial<ButtonProps>;
    /**
     * Callback fired when the finish button is clicked.
     */
    onFinish?: (e: React.MouseEvent | React.KeyboardEvent) => void;
}
declare const _default: (React.ForwardRefExoticComponent<StepsProps & React.RefAttributes<HTMLElement>> | React.FC<StepsProps>) & {
    types: typeof StepsTypeEnum;
    colors: typeof StepsColorEnum;
};
export default _default;
