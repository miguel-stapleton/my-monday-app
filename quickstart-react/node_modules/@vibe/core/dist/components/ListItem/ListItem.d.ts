import React, { AriaAttributes, AriaRole } from "react";
import { VibeComponentProps, ElementContent } from "../../types";
import { ListItemComponentType as ListItemComponentTypeEnum } from "./ListItemConstants";
import { ListItemElement, ListItemSize } from "./ListItem.types";
export interface ListItemProps extends VibeComponentProps {
    /**
     * The HTML element used for the list item.
     */
    component?: ListItemElement;
    /**
     * The textual content inside the list item.
     */
    children?: ElementContent;
    /**
     * Callback fired when the item is clicked.
     */
    onClick?: (event: React.MouseEvent | React.KeyboardEvent, id: string) => void;
    /**
     * Callback fired when the item is hovered.
     */
    onHover?: (event: React.MouseEvent | React.FocusEvent, id: string) => void;
    /**
     * If true, disables the item and prevents interactions.
     */
    disabled?: boolean;
    /**
     * If true, marks the item as selected.
     */
    selected?: boolean;
    /**
     * The size of the list item.
     */
    size?: ListItemSize;
    /**
     * The tab index of the list item for keyboard navigation.
     */
    tabIndex?: number;
    /**
     * Indicates the current state of the item in a set of items.
     */
    "aria-current"?: AriaAttributes["aria-current"];
    /**
     * The ARIA role of the list item.
     */
    role?: AriaRole;
}
declare const _default: (React.ForwardRefExoticComponent<ListItemProps & React.RefAttributes<HTMLElement>> | React.FC<ListItemProps>) & {
    sizes: {
        readonly SMALL: "small";
        readonly MEDIUM: "medium";
        readonly LARGE: "large";
        readonly XXS: "xxs";
        readonly XS: "xs";
    };
    components: typeof ListItemComponentTypeEnum;
};
export default _default;
