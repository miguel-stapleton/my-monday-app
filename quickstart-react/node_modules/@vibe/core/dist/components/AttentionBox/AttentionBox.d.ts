import React from "react";
import { IconType as IconTypeEnum } from "../Icon/IconConstants";
import { AttentionBoxType as AttentionBoxTypeEnum } from "./AttentionBoxConstants";
import { AttentionBoxType } from "./AttentionBox.types";
import { SubIcon, VibeComponentProps, ElementContent } from "../../types";
export interface AttentionBoxProps extends VibeComponentProps {
    /**
     * If true, displays an icon even when no header is provided.
     */
    withIconWithoutHeader?: boolean;
    /**
     * The type of the AttentionBox.
     */
    type?: AttentionBoxType;
    /**
     * The icon displayed next to the title or text.
     */
    icon?: SubIcon;
    /**
     * The type of the icon.
     */
    iconType?: "svg" | "font";
    /**
     * The title of the component.
     */
    title?: string;
    /**
     * The text content displayed inside.
     */
    text?: string;
    /**
     * The content of the component.
     */
    children?: ElementContent;
    /**
     * If true, the icon is not displayed.
     */
    withoutIcon?: boolean;
    /**
     * Callback fired when the close button is clicked.
     */
    onClose?: (event: React.MouseEvent) => void;
    /**
     * If true, renders in compact mode.
     */
    compact?: boolean;
    /**
     * The label of the close button.
     */
    closeButtonAriaLabel?: string;
    /**
     * If true, an entry animation is applied when the component appears.
     */
    entryAnimation?: boolean;
}
declare const _default: (React.FC<AttentionBoxProps> | React.ForwardRefExoticComponent<AttentionBoxProps & React.RefAttributes<HTMLElement>>) & {
    types: typeof AttentionBoxTypeEnum;
    iconTypes: typeof IconTypeEnum;
};
export default _default;
