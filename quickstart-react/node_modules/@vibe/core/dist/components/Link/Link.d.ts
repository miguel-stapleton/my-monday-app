import React from "react";
import { IconPosition as IconPositionEnum, LinkTarget as LinkTargetEnum } from "./LinkConsts";
import { LinkColor, LinkIconPosition, LinkTarget } from "./Link.types";
import { SubIcon, VibeComponentProps } from "../../types";
export interface LinkProps extends VibeComponentProps {
    /**
     * Class name applied to the link text.
     */
    textClassName?: string;
    /**
     * The URL the link points to.
     */
    href?: string;
    /**
     * The text content of the link.
     */
    text?: string;
    /**
     * Specifies the relationship between the current document and the linked resource.
     */
    rel?: string;
    /**
     * Callback fired when the link is clicked.
     */
    onClick?: (event: React.MouseEvent) => void;
    /**
     * Specifies where to open the linked document.
     */
    target?: LinkTarget;
    /**
     * The ARIA label description for accessibility.
     */
    ariaLabelDescription?: string;
    /**
     * The ID of the element that describes this link.
     */
    ariaDescribedby?: string;
    /**
     * The ID of the element labeling this link.
     */
    ariaLabeledBy?: string;
    /**
     * Icon displayed next to the link text.
     */
    icon?: SubIcon;
    /**
     * The position of the icon relative to the text.
     */
    iconPosition?: LinkIconPosition;
    /**
     * If true, disables navigation when the link is clicked.
     */
    disableNavigation?: boolean;
    /**
     * If true, the link inherits the surrounding text's font size.
     */
    inheritFontSize?: boolean;
    /**
     * If true, the link is styled to fit within inline text content.
     */
    inlineText?: boolean;
    /** The link's color style */
    color?: LinkColor;
}
declare const _default: (React.FC<LinkProps> | React.ForwardRefExoticComponent<LinkProps & React.RefAttributes<HTMLElement>>) & {
    targets: typeof LinkTargetEnum;
    iconPositions: typeof IconPositionEnum;
    position: typeof IconPositionEnum;
};
export default _default;
