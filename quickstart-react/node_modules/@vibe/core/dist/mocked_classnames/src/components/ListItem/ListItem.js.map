{"version":3,"file":"ListItem.js","sources":["../../../../../src/components/ListItem/ListItem.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport React, { AriaAttributes, AriaRole, forwardRef, useCallback, useContext, useEffect, useRef } from \"react\";\nimport { camelCase } from \"lodash-es\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport Text from \"../Text/Text\";\nimport { SIZES, SELECTION_KEYS } from \"../../constants\";\nimport { NOOP } from \"../../utils/function-utils\";\nimport { withStaticProps, VibeComponentProps, ElementContent } from \"../../types\";\nimport { useKeyEvent } from \"../../hooks\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport { ListContext } from \"../List/utils/ListContext\";\nimport { ListItemComponentType as ListItemComponentTypeEnum } from \"./ListItemConstants\";\nimport { ListItemElement, ListItemSize } from \"./ListItem.types\";\nimport styles from \"./ListItem.module.scss\";\n\nexport interface ListItemProps extends VibeComponentProps {\n  /**\n   * The HTML element used for the list item.\n   */\n  component?: ListItemElement;\n  /**\n   * The textual content inside the list item.\n   */\n  children?: ElementContent;\n  /**\n   * Callback fired when the item is clicked.\n   */\n  onClick?: (event: React.MouseEvent | React.KeyboardEvent, id: string) => void;\n  /**\n   * Callback fired when the item is hovered.\n   */\n  onHover?: (event: React.MouseEvent | React.FocusEvent, id: string) => void;\n  /**\n   * If true, disables the item and prevents interactions.\n   */\n  disabled?: boolean;\n  /**\n   * If true, marks the item as selected.\n   */\n  selected?: boolean;\n  /**\n   * The size of the list item.\n   */\n  size?: ListItemSize;\n  /**\n   * The tab index of the list item for keyboard navigation.\n   */\n  tabIndex?: number;\n  /**\n   * Indicates the current state of the item in a set of items.\n   */\n  \"aria-current\"?: AriaAttributes[\"aria-current\"];\n  /**\n   * The ARIA role of the list item.\n   */\n  role?: AriaRole;\n}\n\nconst ListItem = forwardRef(\n  (\n    {\n      className,\n      id,\n      component = \"div\",\n      onClick = NOOP,\n      onHover = NOOP,\n      selected,\n      disabled = false,\n      size = SIZES.SMALL,\n      tabIndex = 0,\n      children,\n      \"aria-current\": ariaCurrent,\n      \"data-testid\": dataTestId,\n      role = \"option\"\n    }: ListItemProps,\n    ref: React.ForwardedRef<HTMLElement>\n  ) => {\n    const { updateFocusedItem } = useContext(ListContext);\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n\n    useEffect(() => {\n      if (selected) {\n        updateFocusedItem?.(id);\n      }\n    }, [selected, id, updateFocusedItem]);\n\n    const componentOnClick = useCallback(\n      (event: React.MouseEvent | React.KeyboardEvent) => {\n        if (disabled) return;\n        onClick(event, id);\n      },\n      [disabled, onClick, id]\n    );\n\n    useKeyEvent({\n      keys: SELECTION_KEYS,\n      ref: componentRef,\n      callback: componentOnClick\n    });\n\n    const componentOnHover = useCallback(\n      (event: React.MouseEvent | React.FocusEvent) => {\n        if (disabled) return;\n        onHover(event, id);\n      },\n      [disabled, onHover, id]\n    );\n\n    return (\n      <Text\n        element={component}\n        data-testid={dataTestId || id}\n        ref={mergedRef}\n        className={cx(styles.listItem, className, getStyle(styles, camelCase(size)), {\n          [styles.selected]: selected && !disabled,\n          [styles.disabled]: disabled\n        })}\n        id={id}\n        type=\"text2\"\n        aria-disabled={disabled}\n        aria-selected={selected}\n        onClick={componentOnClick}\n        onMouseEnter={componentOnHover}\n        onFocus={componentOnHover}\n        role={role}\n        tabIndex={tabIndex}\n        aria-current={ariaCurrent}\n      >\n        {children}\n      </Text>\n    );\n  }\n);\n\nObject.assign(ListItem, {\n  // Used by VirtualizedListItems\n  displayName: \"ListItem\"\n});\n\ninterface ListItemStaticProps {\n  sizes: typeof SIZES;\n  components: typeof ListItemComponentTypeEnum;\n}\n\nexport default withStaticProps<ListItemProps, ListItemStaticProps>(ListItem, {\n  sizes: SIZES,\n  components: ListItemComponentTypeEnum\n});\n"],"names":["ListItem","forwardRef","_ref","ref","className","id","_ref$component","component","_ref$onClick","onClick","NOOP","_ref$onHover","onHover","selected","_ref$disabled","disabled","_ref$size","size","SIZES","SMALL","_ref$tabIndex","tabIndex","children","ariaCurrent","dataTestId","_ref$role","role","updateFocusedItem","useContext","ListContext","componentRef","useRef","mergedRef","useMergeRef","useEffect","componentOnClick","useCallback","event","useKeyEvent","keys","SELECTION_KEYS","callback","componentOnHover","React","createElement","Text","element","cx","styles","listItem","getStyle","camelCase","_defineProperty","type","onMouseEnter","onFocus","Object","assign","displayName","withStaticProps","sizes","components","ListItemComponentTypeEnum"],"mappings":"ynCA0DA,IAAMA,EAAWC,GACf,SAAAC,EAgBEC,GACE,IAfAC,EAASF,EAATE,UACAC,EAAEH,EAAFG,GAAEC,EAAAJ,EACFK,UAAAA,OAAY,IAAHD,EAAG,MAAKA,EAAAE,EAAAN,EACjBO,QAAAA,OAAUC,IAAHF,EAAGE,EAAIF,EAAAG,EAAAT,EACdU,QAAAA,OAAUF,IAAHC,EAAGD,EAAIC,EACdE,EAAQX,EAARW,SAAQC,EAAAZ,EACRa,SAAAA,OAAW,IAAHD,GAAQA,EAAAE,EAAAd,EAChBe,KAAAA,OAAI,IAAAD,EAAGE,EAAMC,MAAKH,EAAAI,EAAAlB,EAClBmB,SAAAA,OAAW,IAAHD,EAAG,EAACA,EACZE,EAAQpB,EAARoB,SACgBC,EAAWrB,EAA3B,gBACesB,EAAUtB,EAAzB,eAAauB,EAAAvB,EACbwB,KAAAA,OAAO,IAAHD,EAAG,SAAQA,EAITE,EAAsBC,EAAWC,GAAjCF,kBACFG,EAAeC,EAAO,MACtBC,EAAYC,EAAY9B,EAAK2B,GAEnCI,GAAU,WACJrB,IACFc,SAAAA,EAAoBtB,GAEvB,GAAE,CAACQ,EAAUR,EAAIsB,IAElB,IAAMQ,EAAmBC,GACvB,SAACC,GACKtB,GACJN,EAAQ4B,EAAOhC,EAChB,GACD,CAACU,EAAUN,EAASJ,IAGtBiC,EAAY,CACVC,KAAMC,EACNrC,IAAK2B,EACLW,SAAUN,IAGZ,IAAMO,EAAmBN,GACvB,SAACC,GACKtB,GACJH,EAAQyB,EAAOhC,EAChB,GACD,CAACU,EAAUH,EAASP,IAGtB,OACEsC,EAAAC,cAACC,EAAI,CACHC,QAASvC,EACI,cAAAiB,GAAcnB,EAC3BF,IAAK6B,EACL5B,UAAW2C,EAAGC,EAAOC,SAAU7C,EAAW8C,EAASF,EAAQG,EAAUlC,IAAMmC,EAAAA,EACxEJ,CAAAA,EAAAA,EAAOnC,SAAWA,IAAaE,GAC/BiC,EAAOjC,SAAWA,IAErBV,GAAIA,EACJgD,KAAK,QACU,gBAAAtC,kBACAF,EACfJ,QAAS0B,EACTmB,aAAcZ,EACda,QAASb,EACThB,KAAMA,EACNL,SAAUA,EACI,eAAAE,GAEbD,EAGP,IAGFkC,OAAOC,OAAOzD,EAAU,CAEtB0D,YAAa,aAQf,IAAeC,EAAAA,EAAoD3D,EAAU,CAC3E4D,MAAO1C,EACP2C,WAAYC"}