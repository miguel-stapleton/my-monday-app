{"version":3,"file":"Dropdown.js","sources":["../../../../../src/components/Dropdown/Dropdown.tsx"],"sourcesContent":["import { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport cx from \"classnames\";\nimport { BaseSizes, SIZES_VALUES } from \"../../constants\";\nimport React, { forwardRef, useCallback, useMemo, useRef, useState, useEffect, useContext } from \"react\";\nimport Select, { InputProps, components, createFilter, ActionMeta } from \"react-select\";\nimport AsyncSelect from \"react-select/async\";\nimport BaseSelect from \"react-select/base\";\nimport { noop as NOOP } from \"lodash-es\";\nimport MenuComponent from \"./components/menu/menu\";\nimport DropdownIndicatorComponent from \"./components/DropdownIndicator/DropdownIndicator\";\nimport OptionComponent from \"./components/option/option\";\nimport SingleValueComponent from \"./components/singleValue/singleValue\";\nimport ClearIndicatorComponent from \"./components/ClearIndicator/ClearIndicator\";\nimport MultiValueContainer from \"./components/MultiValueContainer/MultiValueContainer\";\nimport { isClient } from \"../../utils/ssr-utils\";\nimport {\n  ADD_AUTO_HEIGHT_COMPONENTS,\n  defaultCustomStyles,\n  DROPDOWN_CHIP_COLORS,\n  DROPDOWN_ID,\n  DROPDOWN_INPUT_ARIA_LABEL,\n  DROPDOWN_MENU_ARIA_LABEL,\n  DROPDOWN_MENU_ID,\n  DROPDOWN_MENU_PLACEMENT,\n  DROPDOWN_MENU_POSITION\n} from \"./DropdownConstants\";\nimport generateBaseStyles, { customTheme } from \"./Dropdown.styles\";\nimport Control from \"./components/Control/Control\";\nimport Text from \"../Text/Text\";\nimport menuStyles from \"./components/menu/menu.module.scss\";\nimport styles from \"./Dropdown.module.scss\";\nimport {\n  DropdownOption,\n  DropdownState,\n  CustomMenuProps,\n  CustomOptionProps,\n  CustomSingleValueProps,\n  DropdownComponentProps\n} from \"./Dropdown.types\";\nimport { withStaticProps } from \"../../types\";\nimport { ComponentVibeId } from \"../../tests/constants\";\nimport LayerContext from \"../LayerProvider/LayerContext\";\n\nconst Dropdown = forwardRef(\n  (\n    {\n      className,\n      optionWrapperClassName,\n      singleValueWrapperClassName,\n      dropdownMenuWrapperClassName,\n      placeholder = \"\",\n      allowPlaceholderEllipsis,\n      disabled = false,\n      readOnly = false,\n      onMenuOpen = NOOP,\n      onMenuClose = NOOP,\n      onFocus = NOOP,\n      onBlur = NOOP,\n      onScroll = NOOP,\n      onMenuScrollToBottom = NOOP,\n      onChange: customOnChange = NOOP,\n      searchable = true,\n      captureMenuScroll = false,\n      options = [],\n      defaultValue,\n      value: customValue,\n      noOptionsMessage,\n      openMenuOnFocus,\n      openMenuOnClick,\n      clearable = true,\n      OptionRenderer,\n      optionRenderer,\n      ValueRenderer,\n      valueRenderer,\n      menuRenderer,\n      menuPlacement = \"bottom\",\n      rtl,\n      size = \"medium\",\n      asyncOptions,\n      cacheOptions,\n      defaultOptions,\n      isVirtualized,\n      menuPortalTarget,\n      extraStyles = defaultCustomStyles,\n      maxMenuHeight,\n      menuIsOpen,\n      tabIndex = \"0\",\n      id = DROPDOWN_ID,\n      menuId = DROPDOWN_MENU_ID,\n      menuAriaLabel = DROPDOWN_MENU_ARIA_LABEL,\n      inputAriaLabel = DROPDOWN_INPUT_ARIA_LABEL,\n      autoFocus = false,\n      multi = false,\n      multiline = false,\n      onOptionRemove: customOnOptionRemove,\n      onOptionSelect,\n      onClear,\n      onInputChange = NOOP,\n      closeMenuOnSelect = !multi,\n      closeMenuOnScroll: customCloseMenuOnScroll = false,\n      withMandatoryDefaultOptions = false,\n      isOptionSelected,\n      insideOverflowContainer = false,\n      insideOverflowWithTransformContainer = false,\n      insideLayerContext = false,\n      tooltipContent = \"\",\n      onKeyDown = NOOP,\n      isLoading = false,\n      loadingMessage,\n      ariaLabel,\n      tabSelectsValue = true,\n      popupsContainerSelector,\n      filterOption,\n      menuPosition = \"absolute\",\n      \"data-testid\": dataTestId,\n      withGroupDivider = false,\n      inputValue,\n      blurInputOnSelect,\n      multiValueDialogClassName\n    }: DropdownComponentProps,\n    ref: React.ForwardedRef<HTMLElement>\n  ) => {\n    const controlRef = useRef();\n    const { layerRef } = useContext(LayerContext);\n    const overrideMenuPortalTarget =\n      (insideLayerContext && layerRef?.current) ||\n      menuPortalTarget ||\n      (popupsContainerSelector && document.querySelector(popupsContainerSelector));\n    const overrideDefaultValue = useMemo(() => {\n      if (defaultValue) {\n        return Array.isArray(defaultValue)\n          ? (defaultValue as DropdownOption[]).map(df => ({ ...df, isMandatory: true }))\n          : { ...(defaultValue as DropdownOption), isMandatory: true };\n      }\n\n      return defaultValue;\n    }, [defaultValue]);\n\n    BaseSelect.prototype.renderLiveRegion = (): null => {\n      return null;\n    };\n\n    // SSR support\n    const [WindowedMenuList, setWindowedMenuList] = useState(null);\n    useEffect(() => {\n      if (isClient()) {\n        if (isTestEnv()) {\n          // eslint-disable-next-line @typescript-eslint/no-var-requires\n          setWindowedMenuList(() => require(\"react-windowed-select\").WindowedMenuList);\n        } else {\n          // Dynamically import the specific named export from react-windowed-select for SSR support\n          import(\"react-windowed-select\").then(module => {\n            setWindowedMenuList(() => module.WindowedMenuList);\n          });\n        }\n      }\n    }, []);\n\n    const [selected, setSelected] = useState(overrideDefaultValue || []);\n    const [focusedOptionId, setFocusedOptionId] = useState(\"\");\n    const finalOptionRenderer = optionRenderer || OptionRenderer;\n    const finalValueRenderer = valueRenderer || ValueRenderer;\n    const isControlled = !!customValue;\n    const selectedOptions = customValue ?? selected;\n    const selectedOptionsMap = useMemo(() => {\n      if (Array.isArray(selectedOptions)) {\n        return selectedOptions.reduce((acc, option) => ({ ...acc, [option.value]: option }), {});\n      }\n      return {};\n    }, [selectedOptions]);\n\n    const overrideAriaLabel = useMemo(() => {\n      return (\n        ariaLabel ||\n        `${readOnly ? \"Readonly \" : \"\"} ${tooltipContent} ${\n          Array.isArray(selectedOptions) ? `Selected: ${selectedOptions.map(o => o.label).join(\", \")}` : \"Select\"\n        }`\n      );\n    }, [ariaLabel, readOnly, selectedOptions, tooltipContent]);\n    const value = multi ? selectedOptions : customValue;\n\n    const inlineStyles = useMemo(() => {\n      // We first want to get the default stylized groups (e.g. \"container\", \"menu\").\n      const baseStyles = generateBaseStyles({\n        size,\n        rtl,\n        insideOverflowContainer,\n        controlRef,\n        insideOverflowWithTransformContainer,\n        withGroupDivider,\n        searchable,\n        allowPlaceholderEllipsis\n      });\n\n      type BaseStyles = typeof baseStyles;\n\n      // Then we want to run the consumer's root-level custom styles with our \"base\" override groups.\n      const customStyles = extraStyles(baseStyles);\n\n      // Lastly, we create a style groups object that makes sure we run each custom group with our basic overrides.\n      const mergedStyles: any = Object.entries(customStyles).reduce((accumulator, [stylesGroup, stylesFn]) => {\n        return {\n          ...accumulator,\n          [stylesGroup]: (defaultStyles: BaseStyles, state: DropdownState) => {\n            const providedFn = baseStyles[stylesGroup as keyof BaseStyles];\n            const provided = providedFn ? providedFn(defaultStyles, state) : defaultStyles;\n\n            return stylesFn(provided, state);\n          }\n        };\n      }, {} as BaseStyles);\n\n      if (multi) {\n        if (multiline) {\n          ADD_AUTO_HEIGHT_COMPONENTS.forEach((component: string) => {\n            const original = mergedStyles[component];\n            mergedStyles[component] = (provided: BaseStyles, state: DropdownState) => ({\n              ...original(provided, state),\n              height: \"auto\"\n            });\n          });\n        }\n\n        const originalValueContainer = mergedStyles.valueContainer;\n        mergedStyles.valueContainer = (provided: BaseStyles, state: DropdownState) => ({\n          ...originalValueContainer(provided, state),\n          paddingLeft: 6\n        });\n      }\n\n      return mergedStyles;\n    }, [\n      size,\n      rtl,\n      insideOverflowContainer,\n      insideOverflowWithTransformContainer,\n      allowPlaceholderEllipsis,\n      extraStyles,\n      multi,\n      multiline\n    ]);\n\n    const Menu = useCallback(\n      (props: CustomMenuProps) => (\n        <MenuComponent\n          {...props}\n          id={menuId}\n          ariaLabel={menuAriaLabel}\n          Renderer={menuRenderer}\n          dropdownMenuWrapperClassName={dropdownMenuWrapperClassName}\n          onScroll={onScroll}\n        />\n      ),\n      [dropdownMenuWrapperClassName, menuRenderer, menuId, menuAriaLabel, onScroll]\n    );\n\n    const DropdownIndicator = useCallback(\n      (props: React.HTMLAttributes<HTMLElement> & { size?: SIZES_VALUES }) => (\n        <DropdownIndicatorComponent {...props} size={size} />\n      ),\n      [size]\n    );\n\n    const Option = useCallback(\n      (props: CustomOptionProps) => (\n        <OptionComponent\n          setFocusedOptionId={setFocusedOptionId}\n          {...props}\n          Renderer={finalOptionRenderer}\n          optionWrapperClassName={optionWrapperClassName}\n        />\n      ),\n      [finalOptionRenderer, optionWrapperClassName, setFocusedOptionId]\n    );\n\n    const Input = useCallback(\n      (props: InputProps | any) => {\n        const { focusedOptionId, menuIsOpen } = props.selectProps;\n        const ariaActiveDescendant = focusedOptionId && menuIsOpen ? focusedOptionId : \"\";\n        return (\n          <components.Input\n            {...props}\n            aria-activedescendant={ariaActiveDescendant}\n            role=\"combobox\"\n            aria-expanded={!readOnly && menuIsOpen}\n            aria-label={inputAriaLabel}\n            aria-controls={menuId}\n            readOnly={!searchable ? true : undefined}\n          />\n        );\n      },\n      [menuId, readOnly]\n    );\n\n    const SingleValue = useCallback(\n      (props: CustomSingleValueProps) => (\n        <SingleValueComponent\n          {...props}\n          readOnly={readOnly}\n          Renderer={finalValueRenderer}\n          selectedOption={selectedOptions[0]}\n          singleValueWrapperClassName={singleValueWrapperClassName}\n        />\n      ),\n      [finalValueRenderer, readOnly, selectedOptions, singleValueWrapperClassName]\n    );\n\n    const ClearIndicator = useCallback(\n      (props: React.HTMLAttributes<HTMLElement> & { size?: SIZES_VALUES }) => (\n        <ClearIndicatorComponent {...props} size={size} />\n      ),\n      [size]\n    );\n\n    const onOptionRemove = useMemo(() => {\n      return function (optionValue: number, e: React.MouseEvent | React.KeyboardEvent) {\n        if (customOnOptionRemove) {\n          customOnOptionRemove(selectedOptionsMap[optionValue]);\n        }\n        const newSelectedOptions = Array.isArray(selectedOptions)\n          ? selectedOptions.filter(option => option.value !== optionValue)\n          : selectedOptions;\n\n        if (customOnChange) {\n          customOnChange(newSelectedOptions, e);\n        }\n        setSelected(newSelectedOptions);\n      };\n    }, [customOnChange, customOnOptionRemove, selectedOptions, selectedOptionsMap]);\n\n    const customProps = useMemo(\n      () => ({\n        selectedOptions,\n        onSelectedDelete: onOptionRemove,\n        isMultiline: multiline,\n        insideOverflowContainer,\n        insideOverflowWithTransformContainer,\n        controlRef,\n        tooltipContent,\n        popupsContainerSelector: insideLayerContext ? layerRef?.current : popupsContainerSelector,\n        size,\n        dialogClassName: multiValueDialogClassName\n      }),\n      [\n        selectedOptions,\n        onOptionRemove,\n        multiline,\n        insideOverflowContainer,\n        insideOverflowWithTransformContainer,\n        tooltipContent,\n        layerRef,\n        popupsContainerSelector,\n        insideLayerContext,\n        size,\n        multiValueDialogClassName\n      ]\n    );\n    const onChange = (option: DropdownOption | DropdownOption[], meta: ActionMeta<DropdownOption>) => {\n      if (customOnChange) {\n        customOnChange(option, meta);\n      }\n\n      switch (meta.action) {\n        case \"select-option\": {\n          const selectedOption = multi ? meta.option : option;\n\n          if (onOptionSelect) {\n            onOptionSelect(selectedOption);\n          }\n\n          if (!isControlled) {\n            setSelected([...selectedOptions, selectedOption]);\n          }\n          break;\n        }\n\n        case \"clear\":\n          if (onClear) {\n            onClear();\n          }\n\n          if (!isControlled) {\n            if (withMandatoryDefaultOptions) setSelected(overrideDefaultValue);\n            else setSelected([]);\n          }\n          break;\n      }\n    };\n\n    let DropDownComponent: React.ElementType = asyncOptions ? AsyncSelect : Select;\n\n    // @ts-expect-error - We need to check if the default export is available\n    DropDownComponent = DropDownComponent.default || DropDownComponent;\n\n    const asyncAdditions = {\n      ...(asyncOptions && {\n        loadOptions: asyncOptions,\n        cacheOptions,\n        ...(defaultOptions && { defaultOptions })\n      })\n    };\n\n    const additions = {\n      ...(!asyncOptions && { options }),\n      ...(multi && {\n        isMulti: true\n      })\n    };\n\n    const closeMenuOnScroll = useCallback(\n      (event: React.FocusEvent) => {\n        const scrolledElement = event.target;\n        if (scrolledElement?.parentElement?.classList.contains(menuStyles.dropdownMenuWrapper)) {\n          return false;\n        }\n        return customCloseMenuOnScroll || insideOverflowContainer || insideOverflowWithTransformContainer;\n      },\n      [insideOverflowContainer, insideOverflowWithTransformContainer, customCloseMenuOnScroll]\n    );\n\n    const calculatedPlaceholder = useMemo(\n      () =>\n        allowPlaceholderEllipsis ? (\n          <Text type=\"text2\" color=\"inherit\">\n            {placeholder}\n          </Text>\n        ) : (\n          placeholder\n        ),\n      [allowPlaceholderEllipsis, placeholder]\n    );\n\n    return (\n      <DropDownComponent\n        className={cx(styles.dropdown, className)}\n        selectProps={customProps}\n        components={{\n          DropdownIndicator,\n          Menu,\n          ClearIndicator,\n          Input,\n          Option,\n          Control,\n          SingleValue,\n          ...(multi && {\n            MultiValue: NOOP, // We need it for react-select to behave nice with \"multi\"\n            ValueContainer: MultiValueContainer\n          }),\n          ...(isVirtualized && WindowedMenuList && { MenuList: WindowedMenuList })\n        }}\n        // When inside scroll we set the menu position by js and we can't follow the drop down location while use scrolling\n        closeMenuOnScroll={closeMenuOnScroll}\n        size={size}\n        noOptionsMessage={noOptionsMessage}\n        placeholder={calculatedPlaceholder}\n        isDisabled={disabled}\n        isClearable={!readOnly && clearable}\n        isSearchable={!readOnly}\n        readOnly={readOnly}\n        aria-readonly={readOnly}\n        aria-label={overrideAriaLabel}\n        aria-details={tooltipContent}\n        aria-haspopup=\"listbox\"\n        defaultValue={defaultValue}\n        value={value}\n        onMenuOpen={onMenuOpen}\n        onMenuClose={onMenuClose}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onMenuScrollToBottom={onMenuScrollToBottom}\n        captureMenuScroll={captureMenuScroll}\n        onChange={onChange}\n        onKeyDown={onKeyDown}\n        onInputChange={onInputChange}\n        openMenuOnFocus={openMenuOnFocus}\n        openMenuOnClick={openMenuOnClick}\n        focusedOptionId={focusedOptionId}\n        isRtl={rtl}\n        styles={inlineStyles}\n        theme={customTheme}\n        maxMenuHeight={maxMenuHeight}\n        menuPortalTarget={overrideMenuPortalTarget}\n        menuPlacement={menuPlacement}\n        menuPosition={menuPosition}\n        menuIsOpen={!readOnly && menuIsOpen}\n        tabIndex={tabIndex}\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.DROPDOWN, id)}\n        data-vibe={ComponentVibeId.DROPDOWN}\n        autoFocus={autoFocus}\n        closeMenuOnSelect={closeMenuOnSelect}\n        ref={ref as React.Ref<any>}\n        withMandatoryDefaultOptions={withMandatoryDefaultOptions}\n        isOptionSelected={isOptionSelected}\n        isLoading={isLoading}\n        loadingMessage={loadingMessage}\n        tabSelectsValue={tabSelectsValue}\n        filterOption={filterOption}\n        inputValue={inputValue}\n        blurInputOnSelect={blurInputOnSelect}\n        {...asyncAdditions}\n        {...additions}\n      />\n    );\n  }\n);\n\ninterface DropdownStaticProps {\n  sizes: typeof BaseSizes;\n  chipColors: typeof DROPDOWN_CHIP_COLORS;\n  menuPlacements: typeof DROPDOWN_MENU_PLACEMENT;\n  menuPositions: typeof DROPDOWN_MENU_POSITION;\n  createFilter: typeof createFilter;\n}\n\nexport default withStaticProps<DropdownComponentProps, DropdownStaticProps>(Dropdown, {\n  sizes: BaseSizes,\n  chipColors: DROPDOWN_CHIP_COLORS,\n  menuPlacements: DROPDOWN_MENU_PLACEMENT,\n  menuPositions: DROPDOWN_MENU_POSITION,\n  createFilter\n});\n\nfunction isTestEnv() {\n  try {\n    return (\n      typeof require === \"function\" &&\n      typeof module !== \"undefined\" &&\n      typeof process !== \"undefined\" &&\n      process.env.NODE_ENV === \"test\"\n    );\n  } catch (e) {\n    return false;\n  }\n}\n"],"names":["withStaticProps","forwardRef","_ref","ref","className","optionWrapperClassName","singleValueWrapperClassName","dropdownMenuWrapperClassName","_ref$placeholder","placeholder","allowPlaceholderEllipsis","_ref$disabled","disabled","_ref$readOnly","readOnly","_ref$onMenuOpen","onMenuOpen","NOOP","_ref$onMenuClose","onMenuClose","_ref$onFocus","onFocus","_ref$onBlur","onBlur","_ref$onScroll","onScroll","_ref$onMenuScrollToBo","onMenuScrollToBottom","_ref$onChange","onChange","customOnChange","_ref$searchable","searchable","_ref$captureMenuScrol","captureMenuScroll","_ref$options","options","defaultValue","customValue","value","noOptionsMessage","openMenuOnFocus","openMenuOnClick","_ref$clearable","clearable","OptionRenderer","optionRenderer","ValueRenderer","valueRenderer","menuRenderer","_ref$menuPlacement","menuPlacement","rtl","_ref$size","size","asyncOptions","cacheOptions","defaultOptions","isVirtualized","menuPortalTarget","_ref$extraStyles","extraStyles","defaultCustomStyles","maxMenuHeight","menuIsOpen","_ref$tabIndex","tabIndex","_ref$id","id","DROPDOWN_ID","_ref$menuId","menuId","DROPDOWN_MENU_ID","_ref$menuAriaLabel","menuAriaLabel","DROPDOWN_MENU_ARIA_LABEL","_ref$inputAriaLabel","inputAriaLabel","DROPDOWN_INPUT_ARIA_LABEL","_ref$autoFocus","autoFocus","_ref$multi","multi","_ref$multiline","multiline","customOnOptionRemove","onOptionRemove","onOptionSelect","onClear","_ref$onInputChange","onInputChange","_ref$closeMenuOnSelec","closeMenuOnSelect","_ref$closeMenuOnScrol","closeMenuOnScroll","customCloseMenuOnScroll","_ref$withMandatoryDef","withMandatoryDefaultOptions","isOptionSelected","_ref$insideOverflowCo","insideOverflowContainer","_ref$insideOverflowWi","insideOverflowWithTransformContainer","_ref$insideLayerConte","insideLayerContext","_ref$tooltipContent","tooltipContent","_ref$onKeyDown","onKeyDown","_ref$isLoading","isLoading","loadingMessage","ariaLabel","_ref$tabSelectsValue","tabSelectsValue","popupsContainerSelector","filterOption","_ref$menuPosition","menuPosition","dataTestId","_ref$withGroupDivider","withGroupDivider","inputValue","blurInputOnSelect","multiValueDialogClassName","controlRef","useRef","layerRef","useContext","LayerContext","overrideMenuPortalTarget","current","document","querySelector","overrideDefaultValue","useMemo","Array","isArray","map","df","Object","assign","isMandatory","BaseSelect","prototype","renderLiveRegion","_useState","useState","_useState2","_slicedToArray","WindowedMenuList","setWindowedMenuList","useEffect","isClient","require","module","process","env","NODE_ENV","e","isTestEnv","import","then","_useState3","_useState4","selected","setSelected","_useState5","_useState6","focusedOptionId","setFocusedOptionId","finalOptionRenderer","finalValueRenderer","isControlled","selectedOptions","selectedOptionsMap","reduce","acc","option","_defineProperty","overrideAriaLabel","concat","o","label","join","inlineStyles","baseStyles","generateBaseStyles","customStyles","mergedStyles","entries","accumulator","_ref2","_ref3","stylesGroup","stylesFn","defaultStyles","state","providedFn","provided","ADD_AUTO_HEIGHT_COMPONENTS","forEach","component","original","height","originalValueContainer","valueContainer","paddingLeft","Menu","useCallback","props","React","createElement","MenuComponent","Renderer","DropdownIndicator","DropdownIndicatorComponent","Option","OptionComponent","Input","_props$selectProps","selectProps","components","role","undefined","SingleValue","SingleValueComponent","selectedOption","ClearIndicator","ClearIndicatorComponent","optionValue","newSelectedOptions","filter","customProps","onSelectedDelete","isMultiline","dialogClassName","DropDownComponent","AsyncSelect","Select","default","asyncAdditions","loadOptions","additions","isMulti","event","scrolledElement","target","parentElement","_a","classList","contains","menuStyles","dropdownMenuWrapper","calculatedPlaceholder","Text","type","color","cx","styles","dropdown","Control","MultiValue","ValueContainer","MultiValueContainer","MenuList","isDisabled","isClearable","isSearchable","meta","action","_toConsumableArray","isRtl","theme","customTheme","getTestId","ComponentDefaultTestId","DROPDOWN","ComponentVibeId","sizes","BaseSizes","chipColors","DROPDOWN_CHIP_COLORS","menuPlacements","DROPDOWN_MENU_PLACEMENT","menuPositions","DROPDOWN_MENU_POSITION","createFilter"],"mappings":"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"}