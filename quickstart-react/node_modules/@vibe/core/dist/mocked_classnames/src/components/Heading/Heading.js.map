{"version":3,"file":"Heading.js","sources":["../../../../../src/components/Heading/Heading.tsx"],"sourcesContent":["import React, { forwardRef, ReactNode } from \"react\";\nimport cx from \"classnames\";\nimport { camelCase } from \"lodash-es\";\nimport { withStaticProps } from \"../../types\";\nimport { HeadingType as HeadingTypeEnum, HeadingWeight as HeadingWeightEnum } from \"./HeadingConstants\";\nimport Typography, { TypographyProps } from \"../Typography/Typography\";\nimport {\n  TypographyAlign as TypographyAlignEnum,\n  TypographyColor as TypographyColorEnum\n} from \"../Typography/TypographyConstants\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport styles from \"./Heading.module.scss\";\nimport { TypographyContext } from \"../Typography/utils/TypographyContext\";\nimport { HeadingType, HeadingWeight } from \"./Heading.types\";\nimport { TypographyAlign, TypographyColor } from \"../Typography\";\n\nconst OVERFLOW_TOLERANCE_IN_PX = 4;\n\nexport interface HeadingProps extends TypographyProps {\n  /**\n   * The heading type.\n   */\n  type?: HeadingType;\n  /**\n   * The font weight of the heading.\n   */\n  weight?: HeadingWeight;\n  /**\n   * The text alignment.\n   */\n  align?: TypographyAlign;\n  /**\n   * The text color.\n   */\n  color?: TypographyColor;\n  /**\n   * The content inside the heading.\n   */\n  children: ReactNode;\n}\n\nconst Heading = forwardRef(\n  (\n    { className, type = \"h1\", weight = \"normal\", ...typographyProps }: HeadingProps,\n    ref: React.ForwardedRef<HTMLElement>\n  ) => {\n    return (\n      <TypographyContext.Provider value={{ overflowTolerance: OVERFLOW_TOLERANCE_IN_PX }}>\n        <Typography\n          element={type}\n          ref={ref}\n          className={cx(styles.heading, getStyle(styles, camelCase(type + \"-\" + weight)), className)}\n          {...typographyProps}\n        />\n      </TypographyContext.Provider>\n    );\n  }\n);\n\ninterface HeadingStaticProps {\n  types: typeof HeadingTypeEnum;\n  weights: typeof HeadingWeightEnum;\n  colors: typeof TypographyColorEnum;\n  align: typeof TypographyAlignEnum;\n}\n\nexport default withStaticProps<HeadingProps, HeadingStaticProps>(Heading, {\n  types: HeadingTypeEnum,\n  weights: HeadingWeightEnum,\n  align: TypographyAlignEnum,\n  colors: TypographyColorEnum\n});\n"],"names":["withStaticProps","forwardRef","_a","ref","className","_a$type","type","_a$weight","weight","typographyProps","__rest","React","createElement","TypographyContext","Provider","value","overflowTolerance","Typography","Object","assign","element","cx","styles","heading","getStyle","camelCase","types","HeadingTypeEnum","weights","HeadingWeightEnum","align","TypographyAlignEnum","colors","TypographyColorEnum"],"mappings":"4oBAgBA,IAkDeA,EAAAA,EAzBCC,GACd,SACEC,EACAC,GADA,IAAEC,EAA6EF,EAA7EE,UAASC,EAAoEH,EAAlEI,KAAAA,OAAO,IAAHD,EAAG,KAAIA,EAAAE,EAAuDL,EAArDM,OAAAA,OAAS,IAAHD,EAAG,SAAQA,EAAKE,EAAeC,EAAAR,EAA/D,+BAGA,OACES,EAAAC,cAACC,EAAkBC,SAAQ,CAACC,MAAO,CAAEC,kBA/BV,IAgCzBL,EAAAC,cAACK,EACCC,OAAAC,OAAA,CAAAC,QAASd,EACTH,IAAKA,EACLC,UAAWiB,EAAGC,EAAOC,QAASC,EAASF,EAAQG,EAAUnB,EAAO,IAAME,IAAUJ,IAC5EK,IAIZ,IAUwE,CACxEiB,MAAOC,EACPC,QAASC,EACTC,MAAOC,EACPC,OAAQC"}