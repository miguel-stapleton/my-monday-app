{"version":3,"file":"Link.js","sources":["../../../../../src/components/Link/Link.tsx"],"sourcesContent":["import { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport cx from \"classnames\";\nimport React, { forwardRef, useCallback } from \"react\";\nimport { NOOP } from \"../../utils/function-utils\";\nimport Icon from \"../Icon/Icon\";\nimport { IconPosition as IconPositionEnum, LinkTarget as LinkTargetEnum } from \"./LinkConsts\";\nimport { LinkColor, LinkIconPosition, LinkTarget } from \"./Link.types\";\nimport { SubIcon, VibeComponentProps, withStaticProps } from \"../../types\";\nimport styles from \"./Link.module.scss\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport { camelCase } from \"lodash-es\";\n\nexport interface LinkProps extends VibeComponentProps {\n  /**\n   * Class name applied to the link text.\n   */\n  textClassName?: string;\n  /**\n   * The URL the link points to.\n   */\n  href?: string;\n  /**\n   * The text content of the link.\n   */\n  text?: string;\n  /**\n   * Specifies the relationship between the current document and the linked resource.\n   */\n  rel?: string;\n  /**\n   * Callback fired when the link is clicked.\n   */\n  onClick?: (event: React.MouseEvent) => void;\n  /**\n   * Specifies where to open the linked document.\n   */\n  target?: LinkTarget;\n  /**\n   * The ARIA label description for accessibility.\n   */\n  ariaLabelDescription?: string;\n  /**\n   * The ID of the element that describes this link.\n   */\n  ariaDescribedby?: string;\n  /**\n   * The ID of the element labeling this link.\n   */\n  ariaLabeledBy?: string;\n  /**\n   * Icon displayed next to the link text.\n   */\n  icon?: SubIcon;\n  /**\n   * The position of the icon relative to the text.\n   */\n  iconPosition?: LinkIconPosition;\n  /**\n   * If true, disables navigation when the link is clicked.\n   */\n  disableNavigation?: boolean;\n  /**\n   * If true, the link inherits the surrounding text's font size.\n   */\n  inheritFontSize?: boolean;\n  /**\n   * If true, the link is styled to fit within inline text content.\n   */\n  inlineText?: boolean;\n  /** The link's color style */\n  color?: LinkColor;\n}\n\nconst Link = forwardRef(\n  (\n    {\n      className,\n      textClassName,\n      href = \"\",\n      text = \"\",\n      rel = \"noreferrer\",\n      onClick = NOOP,\n      target = \"_blank\",\n      ariaLabelDescription = \"\",\n      color = \"primary\",\n      ariaDescribedby = \"\",\n      icon = \"\",\n      iconPosition = \"start\",\n      id = \"\",\n      ariaLabeledBy = \"\",\n      disableNavigation = false,\n      inheritFontSize = false,\n      inlineText = false,\n      \"data-testid\": dataTestId\n    }: LinkProps,\n    ref: React.ForwardedRef<HTMLAnchorElement>\n  ) => {\n    const isStart = iconPosition === \"start\";\n\n    const onClickWrapper = useCallback(\n      (e: React.MouseEvent<HTMLElement>) => {\n        if (disableNavigation) {\n          e.preventDefault();\n        }\n        onClick && onClick(e);\n      },\n      [disableNavigation, onClick]\n    );\n\n    return (\n      <a\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.LINK, id)}\n        id={id}\n        href={href}\n        rel={rel}\n        ref={ref}\n        onClick={onClickWrapper}\n        target={target}\n        className={cx(styles.link, className, getStyle(styles, camelCase(\"color-\" + color)), {\n          [styles.inheritFontSize]: inheritFontSize,\n          [styles.inlineText]: inlineText\n        })}\n        aria-label={ariaLabelDescription}\n        aria-describedby={ariaDescribedby}\n        aria-labelledby={ariaLabeledBy}\n      >\n        {getIcon(isStart, icon, cx(styles.iconStart))}\n        <span className={cx(styles.text, textClassName)}>{text}</span>\n        {getIcon(!isStart, icon, cx(styles.iconEnd))}\n      </a>\n    );\n  }\n);\n\nfunction getIcon(shouldShow: boolean, icon: string | React.FunctionComponent | null, className: string) {\n  if (!shouldShow) return;\n  return <Icon className={className} icon={icon} iconType=\"font\" />;\n}\n\ninterface LinkStaticProps {\n  targets: typeof LinkTargetEnum;\n  iconPositions: typeof IconPositionEnum;\n  position: typeof IconPositionEnum;\n}\n\nexport default withStaticProps<LinkProps, LinkStaticProps>(Link, {\n  position: IconPositionEnum,\n  iconPositions: IconPositionEnum,\n  targets: LinkTargetEnum\n});\n"],"names":["getIcon","shouldShow","icon","className","React","createElement","Icon","iconType","withStaticProps","forwardRef","_ref","ref","textClassName","_ref$href","href","_ref$text","text","_ref$rel","rel","_ref$onClick","onClick","NOOP","_ref$target","target","_ref$ariaLabelDescrip","ariaLabelDescription","_ref$color","color","_ref$ariaDescribedby","ariaDescribedby","_ref$icon","_ref$iconPosition","iconPosition","_ref$id","id","_ref$ariaLabeledBy","ariaLabeledBy","_ref$disableNavigatio","disableNavigation","_ref$inheritFontSize","inheritFontSize","_ref$inlineText","inlineText","dataTestId","isStart","onClickWrapper","useCallback","e","preventDefault","getTestId","ComponentDefaultTestId","LINK","cx","styles","link","getStyle","camelCase","_defineProperty","iconStart","iconEnd","position","IconPositionEnum","iconPositions","targets","LinkTargetEnum"],"mappings":"4nBAsIA,SAASA,EAAQC,EAAqBC,EAA+CC,GACnF,GAAKF,EACL,OAAOG,EAACC,cAAAC,EAAK,CAAAH,UAAWA,EAAWD,KAAMA,EAAMK,SAAS,QAC1D,CAQA,IAAeC,EAAAA,EAxEFC,GACX,SAAAC,EAqBEC,GACE,IApBAR,EAASO,EAATP,UACAS,EAAaF,EAAbE,cAAaC,EAAAH,EACbI,KAAAA,OAAO,IAAHD,EAAG,GAAEA,EAAAE,EAAAL,EACTM,KAAAA,OAAO,IAAHD,EAAG,GAAEA,EAAAE,EAAAP,EACTQ,IAAAA,OAAM,IAAHD,EAAG,aAAYA,EAAAE,EAAAT,EAClBU,QAAAA,OAAUC,IAAHF,EAAGE,EAAIF,EAAAG,EAAAZ,EACda,OAAAA,OAAS,IAAHD,EAAG,SAAQA,EAAAE,EAAAd,EACjBe,qBAAAA,OAAuB,IAAHD,EAAG,GAAEA,EAAAE,EAAAhB,EACzBiB,MAAAA,OAAQ,IAAHD,EAAG,UAASA,EAAAE,EAAAlB,EACjBmB,gBAAAA,OAAkB,IAAHD,EAAG,GAAEA,EAAAE,EAAApB,EACpBR,KAAAA,OAAO,IAAH4B,EAAG,GAAEA,EAAAC,EAAArB,EACTsB,aAAsBC,EAAAvB,EACtBwB,GAAAA,OAAK,IAAHD,EAAG,GAAEA,EAAAE,EAAAzB,EACP0B,cAAAA,OAAgB,IAAHD,EAAG,GAAEA,EAAAE,EAAA3B,EAClB4B,kBAAAA,OAAoB,IAAHD,GAAQA,EAAAE,EAAA7B,EACzB8B,gBAAAA,OAAkB,IAAHD,GAAQA,EAAAE,EAAA/B,EACvBgC,WAAAA,OAAa,IAAHD,GAAQA,EACHE,EAAUjC,EAAzB,eAIIkC,EAA2B,gBAVhB,IAAHb,EAAG,QAAOA,GAYlBc,EAAiBC,GACrB,SAACC,GACKT,GACFS,EAAEC,iBAEJ5B,GAAWA,EAAQ2B,EACrB,GACA,CAACT,EAAmBlB,IAGtB,OACEhB,EACeC,cAAA,IAAA,CAAA,cAAAsC,GAAcM,EAAUC,EAAuBC,KAAMjB,GAClEA,GAAIA,EACJpB,KAAMA,EACNI,IAAKA,EACLP,IAAKA,EACLS,QAASyB,EACTtB,OAAQA,EACRpB,UAAWiD,EAAGC,EAAOC,KAAMnD,EAAWoD,EAASF,EAAQG,EAAU,SAAW7B,IAAO8B,EAAAA,EAAA,CAAA,EAChFJ,EAAOb,gBAAkBA,GACzBa,EAAOX,WAAaA,IAEX,aAAAjB,EACM,mBAAAI,oBACDO,GAEhBpC,EAAQ4C,EAAS1C,EAAMkD,EAAGC,EAAOK,YAClCtD,EAAAC,cAAA,OAAA,CAAMF,UAAWiD,EAAGC,EAAOrC,KAAMJ,IAAiBI,GACjDhB,GAAS4C,EAAS1C,EAAMkD,EAAGC,EAAOM,UAGzC,IAc+D,CAC/DC,SAAUC,EACVC,cAAeD,EACfE,QAASC"}