import React, { AriaRole } from "react";
import { ElementAllowedColor } from "../../types/Colors";
import { AvatarSize as AvatarSizeEnum, AvatarType as AvatarTypeEnum } from "./AvatarConstants";
import { AvatarSize, AvatarType } from "./Avatar.types";
import { AvatarBadgeProps } from "./AvatarBadge";
import { TooltipProps } from "../Tooltip/Tooltip";
import { SubIcon, VibeComponentProps } from "../../types";
export interface AvatarProps extends VibeComponentProps {
    /**
     * The image source for the avatar.
     */
    src?: string;
    /**
     * The text displayed inside the avatar.
     */
    text?: string;
    /**
     * Props passed to the Tooltip component. See full options in the [Tooltip documentation](https://vibe.monday.com/?path=/docs/components-tooltip--docs).
     */
    tooltipProps?: Partial<TooltipProps>;
    /**
     * The ARIA label of the avatar.
     */
    ariaLabel?: string;
    /**
     * If true, the tooltip is disabled.
     */
    withoutTooltip?: boolean;
    /**
     * The icon displayed inside the avatar.
     */
    icon?: SubIcon;
    /**
     * The type of the avatar.
     */
    type?: AvatarType;
    /**
     * Class name applied to the text inside the avatar.
     */
    textClassName?: string;
    /**
     * Class name applied to the avatar content wrapper.
     */
    avatarContentWrapperClassName?: string;
    /**
     * The background color of the avatar.
     */
    backgroundColor?: ElementAllowedColor;
    /**
     * A custom background color.
     */
    customBackgroundColor?: string;
    /**
     * The ARIA role of the avatar.
     */
    role?: AriaRole;
    /**
     * The size of the avatar.
     */
    size?: AvatarSize;
    /**
     * A custom size in pixels.
     */
    customSize?: number;
    /**
     * The tab index of the avatar.
     */
    tabIndex?: number;
    /**
     * If true, the avatar is hidden from assistive technologies.
     */
    ariaHidden?: boolean;
    /**
     * If true, the avatar is disabled.
     */
    disabled?: boolean;
    /**
     * If true, renders the avatar as a square instead of a circle.
     */
    square?: boolean;
    /**
     * Props for the top-left badge.
     */
    topLeftBadgeProps?: AvatarBadgeProps;
    /**
     * Props for the top-right badge.
     */
    topRightBadgeProps?: AvatarBadgeProps;
    /**
     * Props for the bottom-left badge.
     */
    bottomLeftBadgeProps?: AvatarBadgeProps;
    /**
     * Props for the bottom-right badge.
     */
    bottomRightBadgeProps?: AvatarBadgeProps;
    /**
     * If true, removes the avatar's border.
     */
    withoutBorder?: boolean;
    /**
     * Callback fired when the avatar is clicked.
     */
    onClick?: (event: React.MouseEvent | React.KeyboardEvent, avatarId: string) => void;
}
declare const _default: (React.FC<AvatarProps> | React.ForwardRefExoticComponent<AvatarProps & React.RefAttributes<HTMLElement>>) & {
    types: typeof AvatarTypeEnum;
    sizes: typeof AvatarSizeEnum;
    colors: {
        POSITIVE: import("../../utils/colors-vars-map").StateSelectedHoverColor.POSITIVE;
        NEGATIVE: import("../../utils/colors-vars-map").StateSelectedHoverColor.NEGATIVE;
        PRIMARY: import("../../utils/colors-vars-map").StateSelectedHoverColor.PRIMARY;
        WARNING: import("../../utils/colors-vars-map").StateSelectedColor.WARNING;
        GRASS_GREEN: import("../../utils/colors-vars-map").ContentColorByName.GRASS_GREEN;
        DONE_GREEN: import("../../utils/colors-vars-map").ContentColorByName.DONE_GREEN;
        BRIGHT_GREEN: import("../../utils/colors-vars-map").ContentColorByName.BRIGHT_GREEN;
        SALADISH: import("../../utils/colors-vars-map").ContentColorByName.SALADISH;
        EGG_YOLK: import("../../utils/colors-vars-map").ContentColorByName.EGG_YOLK;
        WORKING_ORANGE: import("../../utils/colors-vars-map").ContentColorByName.WORKING_ORANGE;
        DARK_ORANGE: import("../../utils/colors-vars-map").ContentColorByName.DARK_ORANGE;
        PEACH: import("../../utils/colors-vars-map").ContentColorByName.PEACH;
        SUNSET: import("../../utils/colors-vars-map").ContentColorByName.SUNSET;
        STUCK_RED: import("../../utils/colors-vars-map").ContentColorByName.STUCK_RED;
        DARK_RED: import("../../utils/colors-vars-map").ContentColorByName.DARK_RED;
        SOFIA_PINK: import("../../utils/colors-vars-map").ContentColorByName.SOFIA_PINK;
        LIPSTICK: import("../../utils/colors-vars-map").ContentColorByName.LIPSTICK;
        BUBBLE: import("../../utils/colors-vars-map").ContentColorByName.BUBBLE;
        PURPLE: import("../../utils/colors-vars-map").ContentColorByName.PURPLE;
        DARK_PURPLE: import("../../utils/colors-vars-map").ContentColorByName.DARK_PURPLE;
        BERRY: import("../../utils/colors-vars-map").ContentColorByName.BERRY;
        DARK_INDIGO: import("../../utils/colors-vars-map").ContentColorByName.DARK_INDIGO;
        INDIGO: import("../../utils/colors-vars-map").ContentColorByName.INDIGO;
        NAVY: import("../../utils/colors-vars-map").ContentColorByName.NAVY;
        BRIGHT_BLUE: import("../../utils/colors-vars-map").ContentColorByName.BRIGHT_BLUE;
        DARK_BLUE: import("../../utils/colors-vars-map").ContentColorByName.DARK_BLUE;
        AQUAMARINE: import("../../utils/colors-vars-map").ContentColorByName.AQUAMARINE;
        CHILI_BLUE: import("../../utils/colors-vars-map").ContentColorByName.CHILI_BLUE;
        RIVER: import("../../utils/colors-vars-map").ContentColorByName.RIVER;
        WINTER: import("../../utils/colors-vars-map").ContentColorByName.WINTER;
        EXPLOSIVE: import("../../utils/colors-vars-map").ContentColorByName.EXPLOSIVE;
        AMERICAN_GRAY: import("../../utils/colors-vars-map").ContentColorByName.AMERICAN_GRAY;
        BLACKISH: import("../../utils/colors-vars-map").ContentColorByName.BLACKISH;
        BROWN: import("../../utils/colors-vars-map").ContentColorByName.BROWN;
        ORCHID: import("../../utils/colors-vars-map").ContentColorByName.ORCHID;
        TAN: import("../../utils/colors-vars-map").ContentColorByName.TAN;
        SKY: import("../../utils/colors-vars-map").ContentColorByName.SKY;
        COFFEE: import("../../utils/colors-vars-map").ContentColorByName.COFFEE;
        ROYAL: import("../../utils/colors-vars-map").ContentColorByName.ROYAL;
        TEAL: import("../../utils/colors-vars-map").ContentColorByName.TEAL;
        LAVENDER: import("../../utils/colors-vars-map").ContentColorByName.LAVENDER;
        STEEL: import("../../utils/colors-vars-map").ContentColorByName.STEEL;
        LILAC: import("../../utils/colors-vars-map").ContentColorByName.LILAC;
        PECAN: import("../../utils/colors-vars-map").ContentColorByName.PECAN;
    };
    backgroundColors: {
        POSITIVE: import("../../utils/colors-vars-map").StateSelectedHoverColor.POSITIVE;
        NEGATIVE: import("../../utils/colors-vars-map").StateSelectedHoverColor.NEGATIVE;
        PRIMARY: import("../../utils/colors-vars-map").StateSelectedHoverColor.PRIMARY;
        WARNING: import("../../utils/colors-vars-map").StateSelectedColor.WARNING;
        GRASS_GREEN: import("../../utils/colors-vars-map").ContentColorByName.GRASS_GREEN;
        DONE_GREEN: import("../../utils/colors-vars-map").ContentColorByName.DONE_GREEN;
        BRIGHT_GREEN: import("../../utils/colors-vars-map").ContentColorByName.BRIGHT_GREEN;
        SALADISH: import("../../utils/colors-vars-map").ContentColorByName.SALADISH;
        EGG_YOLK: import("../../utils/colors-vars-map").ContentColorByName.EGG_YOLK;
        WORKING_ORANGE: import("../../utils/colors-vars-map").ContentColorByName.WORKING_ORANGE;
        DARK_ORANGE: import("../../utils/colors-vars-map").ContentColorByName.DARK_ORANGE;
        PEACH: import("../../utils/colors-vars-map").ContentColorByName.PEACH;
        SUNSET: import("../../utils/colors-vars-map").ContentColorByName.SUNSET;
        STUCK_RED: import("../../utils/colors-vars-map").ContentColorByName.STUCK_RED;
        DARK_RED: import("../../utils/colors-vars-map").ContentColorByName.DARK_RED;
        SOFIA_PINK: import("../../utils/colors-vars-map").ContentColorByName.SOFIA_PINK;
        LIPSTICK: import("../../utils/colors-vars-map").ContentColorByName.LIPSTICK;
        BUBBLE: import("../../utils/colors-vars-map").ContentColorByName.BUBBLE;
        PURPLE: import("../../utils/colors-vars-map").ContentColorByName.PURPLE;
        DARK_PURPLE: import("../../utils/colors-vars-map").ContentColorByName.DARK_PURPLE;
        BERRY: import("../../utils/colors-vars-map").ContentColorByName.BERRY;
        DARK_INDIGO: import("../../utils/colors-vars-map").ContentColorByName.DARK_INDIGO;
        INDIGO: import("../../utils/colors-vars-map").ContentColorByName.INDIGO;
        NAVY: import("../../utils/colors-vars-map").ContentColorByName.NAVY;
        BRIGHT_BLUE: import("../../utils/colors-vars-map").ContentColorByName.BRIGHT_BLUE;
        DARK_BLUE: import("../../utils/colors-vars-map").ContentColorByName.DARK_BLUE;
        AQUAMARINE: import("../../utils/colors-vars-map").ContentColorByName.AQUAMARINE;
        CHILI_BLUE: import("../../utils/colors-vars-map").ContentColorByName.CHILI_BLUE;
        RIVER: import("../../utils/colors-vars-map").ContentColorByName.RIVER;
        WINTER: import("../../utils/colors-vars-map").ContentColorByName.WINTER;
        EXPLOSIVE: import("../../utils/colors-vars-map").ContentColorByName.EXPLOSIVE;
        AMERICAN_GRAY: import("../../utils/colors-vars-map").ContentColorByName.AMERICAN_GRAY;
        BLACKISH: import("../../utils/colors-vars-map").ContentColorByName.BLACKISH;
        BROWN: import("../../utils/colors-vars-map").ContentColorByName.BROWN;
        ORCHID: import("../../utils/colors-vars-map").ContentColorByName.ORCHID;
        TAN: import("../../utils/colors-vars-map").ContentColorByName.TAN;
        SKY: import("../../utils/colors-vars-map").ContentColorByName.SKY;
        COFFEE: import("../../utils/colors-vars-map").ContentColorByName.COFFEE;
        ROYAL: import("../../utils/colors-vars-map").ContentColorByName.ROYAL;
        TEAL: import("../../utils/colors-vars-map").ContentColorByName.TEAL;
        LAVENDER: import("../../utils/colors-vars-map").ContentColorByName.LAVENDER;
        STEEL: import("../../utils/colors-vars-map").ContentColorByName.STEEL;
        LILAC: import("../../utils/colors-vars-map").ContentColorByName.LILAC;
        PECAN: import("../../utils/colors-vars-map").ContentColorByName.PECAN;
    };
};
export default _default;
