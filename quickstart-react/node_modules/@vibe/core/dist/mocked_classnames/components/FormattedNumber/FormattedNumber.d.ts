import React from "react";
import { formatNumber } from "../../helpers/textManipulations";
import { VibeComponentProps } from "../../types";
export interface FormattedNumberProps extends VibeComponentProps {
    /**
     * The numeric value to format.
     */
    value?: number | string;
    /**
     * The text displayed before the number.
     */
    prefix?: string;
    /**
     * The text displayed after the number.
     */
    suffix?: string;
    /**
     * The text displayed when no value is provided.
     */
    emptyPlaceHolder?: string;
    /**
     * The number of decimal places to display (0 ~ 20).
     */
    decimalPrecision?: number;
    /**
     * If true, formats the number into a compact notation.
     */
    compact?: boolean;
    /**
     * The locale used for formatting (Unicode BCP 47 locale identifier).
     */
    local?: string;
    /**
     * If true, reverses the order of the prefix and suffix.
     */
    rtl?: boolean;
}
declare const _default: (React.FC<FormattedNumberProps> | React.ForwardRefExoticComponent<FormattedNumberProps & React.RefAttributes<HTMLElement>>) & {
    formatNumber: typeof formatNumber;
    localFallBack: string;
};
export default _default;
