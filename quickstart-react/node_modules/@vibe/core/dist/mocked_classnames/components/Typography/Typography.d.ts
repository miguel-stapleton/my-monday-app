import React, { HTMLAttributes } from "react";
import { VibeComponentProps } from "../../types";
import { ElementContent } from "../../types";
import { TypographyAlign, TypographyColor } from "./Typography.types";
import { TooltipProps } from "../Tooltip/Tooltip";
export interface TypographyProps extends VibeComponentProps, HTMLAttributes<HTMLElement> {
    /**
     * The HTML element tag used for the text component.
     */
    element?: string;
    /**
     * The content inside the typography component.
     */
    children: ElementContent;
    /**
     * The text color.
     */
    color?: TypographyColor;
    /**
     * The text alignment.
     */
    align?: TypographyAlign;
    /**
     * If true, truncates overflowing text with an ellipsis.
     */
    ellipsis?: boolean;
    /**
     * The maximum number of lines before truncating with an ellipsis.
     */
    maxLines?: number;
    /**
     * Props passed to the tooltip displayed when hovering over the text.
     */
    tooltipProps?: Partial<TooltipProps>;
    /**
     * If true, disables the tooltip that appears when text is truncated.
     */
    withoutTooltip?: boolean;
}
declare const Typography: React.ForwardRefExoticComponent<TypographyProps & React.RefAttributes<HTMLElement>>;
export default Typography;
